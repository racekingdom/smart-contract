{
  "contractName": "RKVesting",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Revoked",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "getVestingSchedulesCountByBeneficiary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVestingIdAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVestingScheduleByAddressAndIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slicePeriodSeconds",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amountTotal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "released",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            }
          ],
          "internalType": "struct RKVesting.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingSchedulesTotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_slicePeriodSeconds",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_revocable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "createVestingSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingSchedulesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "computeReleasableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "getVestingSchedule",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slicePeriodSeconds",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amountTotal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "released",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            }
          ],
          "internalType": "struct RKVesting.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "computeNextVestingScheduleIdForHolder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "getLastVestingScheduleForHolder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slicePeriodSeconds",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amountTotal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "released",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            }
          ],
          "internalType": "struct RKVesting.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "computeVestingScheduleIdForAddressAndIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Revoked\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"computeNextVestingScheduleIdForHolder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"computeReleasableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"computeVestingScheduleIdForAddressAndIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slicePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getLastVestingScheduleForHolder\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct RKVesting.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVestingIdAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"getVestingSchedule\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct RKVesting.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVestingScheduleByAddressAndIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct RKVesting.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingSchedulesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getVestingSchedulesCountByBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingSchedulesTotalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"computeNextVestingScheduleIdForHolder(address)\":{\"details\":\"Computes the next vesting schedule identifier for a given holder address.\"},\"computeReleasableAmount(bytes32)\":{\"returns\":{\"_0\":\"the vested amount\"}},\"computeVestingScheduleIdForAddressAndIndex(address,uint256)\":{\"details\":\"Computes the vesting schedule identifier for an address and an index.\"},\"constructor\":{\"details\":\"Creates a vesting contract.\",\"params\":{\"token_\":\"address of the ERC20 token contract\"}},\"createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"params\":{\"_amount\":\"total amount of tokens to be released at the end of the vesting\",\"_beneficiary\":\"address of the beneficiary to whom vested tokens are transferred\",\"_cliff\":\"duration in seconds of the cliff in which tokens will begin to vest\",\"_duration\":\"duration in seconds of the period in which the tokens will vest\",\"_revocable\":\"whether the vesting is revocable or not\",\"_slicePeriodSeconds\":\"duration of a slice period for the vesting in seconds\",\"_start\":\"start time of the vesting period\"}},\"getLastVestingScheduleForHolder(address)\":{\"details\":\"Returns the last vesting schedule for a given holder address.\"},\"getToken()\":{\"details\":\"Returns the address of the ERC20 token managed by the vesting contract.\"},\"getVestingIdAtIndex(uint256)\":{\"details\":\"Returns the vesting schedule id at the given index.\",\"returns\":{\"_0\":\"the vesting id\"}},\"getVestingSchedule(bytes32)\":{\"returns\":{\"_0\":\"the vesting schedule structure information\"}},\"getVestingScheduleByAddressAndIndex(address,uint256)\":{\"returns\":{\"_0\":\"the vesting schedule structure information\"}},\"getVestingSchedulesCount()\":{\"details\":\"Returns the number of vesting schedules managed by this contract.\",\"returns\":{\"_0\":\"the number of vesting schedules\"}},\"getVestingSchedulesCountByBeneficiary(address)\":{\"details\":\"Returns the number of vesting schedules associated to a beneficiary.\",\"returns\":{\"_0\":\"the number of vesting schedules\"}},\"getVestingSchedulesTotalAmount()\":{\"returns\":{\"_0\":\"the total amount of vesting schedules\"}},\"getWithdrawableAmount()\":{\"details\":\"Returns the amount of tokens that can be withdrawn by the owner.\",\"returns\":{\"_0\":\"the amount of tokens\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"release(bytes32,uint256)\":{\"params\":{\"amount\":\"the amount to release\",\"vestingScheduleId\":\"the vesting schedule identifier\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(bytes32)\":{\"params\":{\"vestingScheduleId\":\"the vesting schedule identifier\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"params\":{\"amount\":\"the amount to withdraw\"}}},\"title\":\"RKVesting\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeReleasableAmount(bytes32)\":{\"notice\":\"Computes the vested amount of tokens for the given vesting schedule identifier.\"},\"createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Creates a new vesting schedule for a beneficiary.\"},\"getVestingSchedule(bytes32)\":{\"notice\":\"Returns the vesting schedule information for a given identifier.\"},\"getVestingScheduleByAddressAndIndex(address,uint256)\":{\"notice\":\"Returns the vesting schedule information for a given holder and index.\"},\"getVestingSchedulesTotalAmount()\":{\"notice\":\"Returns the total amount of vesting schedules.\"},\"release(bytes32,uint256)\":{\"notice\":\"Release vested amount of tokens.\"},\"revoke(bytes32)\":{\"notice\":\"Revokes the vesting schedule for given identifier.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw the specified amount if possible.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RKVesting.sol\":\"RKVesting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/RKVesting.sol\":{\"keccak256\":\"0x984d4afc7094bc10324eb55cc53a7e9a84bd87edadce073f71dcbb6b0a683a60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://354c37856230f0a7ef0ae1a8f65d1778ac6802dccb2b3a8741a848a28688fa95\",\"dweb:/ipfs/QmdZEqY6eRnw96TBtXRYtmkUWjaJSWaqdoQ9Yta6566ooy\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001afd38038062001afd8339810160408190526200003491620000b9565b6200003f3362000069565b600180556001600160a01b0381166200005757600080fd5b6001600160a01b0316608052620000eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000cc57600080fd5b81516001600160a01b0381168114620000e457600080fd5b9392505050565b6080516119e16200011c600039600081816101680152818161092001528181610be60152610d8e01526119e16000f3fe60806040526004361061010c5760003560e01c80638af104da1161009a578063ea1bb3d511610061578063ea1bb3d514610300578063f2fde38b14610320578063f51321d714610340578063f7c469f014610360578063f9079b371461038057005b80638af104da1461026d5780638da5cb5b1461028d57806390be10cc146102ab5780639ef346b4146102c0578063b75c7dc6146102e057005b806348deb471116100de57806348deb471146101c05780635a7bb69a146101d557806366afd8ef1461020b578063715018a61461022b5780637e913dc61461024057005b8063130836171461011557806317e289e91461013957806321df0da7146101595780632e1a7d4d146101a057005b3661011357005b005b34801561012157600080fd5b506002545b6040519081526020015b60405180910390f35b34801561014557600080fd5b506101136101543660046116b3565b6103a0565b34801561016557600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610130565b3480156101ac57600080fd5b506101136101bb36600461171a565b610812565b3480156101cc57600080fd5b50600454610126565b3480156101e157600080fd5b506101266101f0366004611733565b6001600160a01b031660009081526005602052604090205490565b34801561021757600080fd5b5061011361022636600461174e565b61094a565b34801561023757600080fd5b50610113610c1b565b34801561024c57600080fd5b5061026061025b366004611733565b610c51565b6040516101309190611770565b34801561027957600080fd5b506101266102883660046117fb565b610d29565b34801561029957600080fd5b506000546001600160a01b0316610188565b3480156102b757600080fd5b50610126610d70565b3480156102cc57600080fd5b506102606102db36600461171a565b610e10565b3480156102ec57600080fd5b506101136102fb36600461171a565b610eb7565b34801561030c57600080fd5b5061012661031b36600461171a565b611079565b34801561032c57600080fd5b5061011361033b366004611733565b611163565b34801561034c57600080fd5b5061026061035b3660046117fb565b6111fb565b34801561036c57600080fd5b5061012661037b366004611733565b611217565b34801561038c57600080fd5b5061012661039b36600461171a565b611241565b6000546001600160a01b031633146103d35760405162461bcd60e51b81526004016103ca90611825565b60405180910390fd5b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610436919061185a565b10156104bd5760405162461bcd60e51b815260206004820152604a60248201527f546f6b656e56657374696e673a2063616e6e6f7420637265617465207665737460448201527f696e67207363686564756c652062656361757365206e6f742073756666696369606482015269656e7420746f6b656e7360b01b608482015260a4016103ca565b600084116105185760405162461bcd60e51b815260206004820152602260248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e604482015261020360f41b60648201526084016103ca565b600081116105685760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e203060448201526064016103ca565b60018310156105cf5760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a20736c696365506572696f645365636f6e647360448201526c206d757374206265203e3d203160981b60648201526084016103ca565b604051630f7c469f60e41b81526001600160a01b0388166004820152600090309063f7c469f090602401602060405180830381865afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a919061185a565b905060006106488789611889565b90506040518061014001604052806001151581526020018a6001600160a01b03168152602001828152602001898152602001878152602001868152602001851515815260200184815260200160008152602001600015158152506003600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548160ff021916908315150217905550905050826004546107919190611889565b6004556002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018390556001600160a01b038a16600090815260056020526040902054906107ea908290611889565b6001600160a01b03909a16600090815260056020526040902099909955505050505050505050565b6000546001600160a01b0316331461083c5760405162461bcd60e51b81526004016103ca90611825565b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f919061185a565b10156109015760405162461bcd60e51b815260206004820152602b60248201527f546f6b656e56657374696e673a206e6f7420656e6f756768207769746864726160448201526a7761626c652066756e647360a81b60648201526084016103ca565b6109476109166000546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836112c9565b50565b60026001540361099c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103ca565b60026001908155600083815260036020526040902054839160ff9091161515146109c557600080fd5b60008181526003602052604090206008015460ff16156109e457600080fd5b6000838152600360205260408120805491549091336001600160a01b03610100909204821681149291909116148180610a1a5750805b610a975760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656064820152616e7360f01b608482015260a4016103ca565b6040805161014081018252845460ff808216151583526001600160a01b03610100928390041660208401526001870154938301939093526002860154606083015260038601546080830152600486015460a083015260058601548316151560c0830152600686015460e083015260078601549082015260088501549091161515610120820152600090610b2990611320565b905085811015610ba15760405162461bcd60e51b815260206004820152603d60248201527f546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b60448201527f656e732c206e6f7420656e6f7567682076657374656420746f6b656e7300000060648201526084016103ca565b858460070154610bb19190611889565b600785015583546004546101009091046001600160a01b031690610bd69088906118a1565b600455610c0d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682896112c9565b505060018055505050505050565b6000546001600160a01b03163314610c455760405162461bcd60e51b81526004016103ca90611825565b610c4f60006113f1565b565b610c59611627565b6001600160a01b03821660009081526005602052604081205460039190610c88908590610288906001906118a1565b81526020808201929092526040908101600020815161014081018352815460ff808216151583526001600160a01b036101009283900416958301959095526001830154938201939093526002820154606082015260038201546080820152600482015460a082015260058201548416151560c0820152600682015460e082015260078201549281019290925260080154909116151561012082015292915050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b600480546040516370a0823160e01b815230928101929092526000917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ddd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e01919061185a565b610e0b91906118a1565b905090565b610e18611627565b50600090815260036020818152604092839020835161014081018552815460ff808216151583526001600160a01b0361010092839004169483019490945260018301549582019590955260028201546060820152928101546080840152600481015460a084015260058101548216151560c0840152600681015460e0840152600781015493830193909352600890920154909116151561012082015290565b6000546001600160a01b03163314610ee15760405162461bcd60e51b81526004016103ca90611825565b600081815260036020526040902054819060ff161515600114610f0357600080fd5b60008181526003602052604090206008015460ff1615610f2257600080fd5b6000828152600360205260409020600581015460ff161515600114610f985760405162461bcd60e51b815260206004820152602660248201527f546f6b656e56657374696e673a2076657374696e67206973206e6f74207265766044820152656f6361626c6560d01b60648201526084016103ca565b6040805161014081018252825460ff808216151583526001600160a01b03610100928390041660208401526001850154938301939093526002840154606083015260038401546080830152600484015460a083015260058401548316151560c0830152600684015460e08301526007840154908201526008830154909116151561012082015260009061102a90611320565b9050801561103c5761103c848261094a565b60008260070154836006015461105291906118a1565b90508060045461106291906118a1565b6004555050600801805460ff191660011790555050565b600081815260036020526040812054829060ff16151560011461109b57600080fd5b60008181526003602052604090206008015460ff16156110ba57600080fd5b600083815260036020818152604092839020835161014081018552815460ff808216151583526001600160a01b0361010092839004169483019490945260018301549582019590955260028201546060820152928101546080840152600481015460a084015260058101548216151560c0840152600681015460e0840152600781015493830193909352600883015416151561012082015261115b90611320565b949350505050565b6000546001600160a01b0316331461118d5760405162461bcd60e51b81526004016103ca90611825565b6001600160a01b0381166111f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ca565b610947816113f1565b611203611627565b6112106102db8484610d29565b9392505050565b6001600160a01b03811660009081526005602052604081205461123b908390610d29565b92915050565b600061124c60025490565b82106112a45760405162461bcd60e51b815260206004820152602160248201527f546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e646044820152607360f81b60648201526084016103ca565b600282815481106112b7576112b76118b8565b90600052602060002001549050919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261131b908490611441565b505050565b6040810151600090429081108061133e575061012083015115156001145b1561134c5750600092915050565b826080015183606001516113609190611889565b811061137b578261010001518360e0015161121091906118a1565b600083606001518261138d91906118a1565b60a085015190915060006113a182846118ce565b905060006113af83836118f0565b905060008760800151828960e001516113c891906118f0565b6113d291906118ce565b9050876101000151816113e591906118a1565b98975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611496826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115139092919063ffffffff16565b80519091501561131b57808060200190518101906114b4919061190f565b61131b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103ca565b606061115b8484600085856001600160a01b0385163b6115755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ca565b600080866001600160a01b03168587604051611591919061195c565b60006040518083038185875af1925050503d80600081146115ce576040519150601f19603f3d011682016040523d82523d6000602084013e6115d3565b606091505b50915091506115e38282866115ee565b979650505050505050565b606083156115fd575081611210565b82511561160d5782518084602001fd5b8160405162461bcd60e51b81526004016103ca9190611978565b60405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b80356001600160a01b03811681146116a057600080fd5b919050565b801515811461094757600080fd5b600080600080600080600060e0888a0312156116ce57600080fd5b6116d788611689565b96506020880135955060408801359450606088013593506080880135925060a0880135611703816116a5565b8092505060c0880135905092959891949750929550565b60006020828403121561172c57600080fd5b5035919050565b60006020828403121561174557600080fd5b61121082611689565b6000806040838503121561176157600080fd5b50508035926020909101359150565b8151151581526101408101602083015161179560208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c08301516117d160c084018215159052565b5060e083810151908301526101008084015190830152610120928301511515929091019190915290565b6000806040838503121561180e57600080fd5b61181783611689565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561186c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561189c5761189c611873565b500190565b6000828210156118b3576118b3611873565b500390565b634e487b7160e01b600052603260045260246000fd5b6000826118eb57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561190a5761190a611873565b500290565b60006020828403121561192157600080fd5b8151611210816116a5565b60005b8381101561194757818101518382015260200161192f565b83811115611956576000848401525b50505050565b6000825161196e81846020870161192c565b9190910192915050565b602081526000825180602084015261199781604085016020870161192c565b601f01601f1916919091016040019291505056fea26469706673582212207ae53f8b0550853100b20ba7c32750e065aca61614485f0107eb9ef9433bc97d64736f6c634300080e0033",
  "deployedBytecode": "0x60806040526004361061010c5760003560e01c80638af104da1161009a578063ea1bb3d511610061578063ea1bb3d514610300578063f2fde38b14610320578063f51321d714610340578063f7c469f014610360578063f9079b371461038057005b80638af104da1461026d5780638da5cb5b1461028d57806390be10cc146102ab5780639ef346b4146102c0578063b75c7dc6146102e057005b806348deb471116100de57806348deb471146101c05780635a7bb69a146101d557806366afd8ef1461020b578063715018a61461022b5780637e913dc61461024057005b8063130836171461011557806317e289e91461013957806321df0da7146101595780632e1a7d4d146101a057005b3661011357005b005b34801561012157600080fd5b506002545b6040519081526020015b60405180910390f35b34801561014557600080fd5b506101136101543660046116b3565b6103a0565b34801561016557600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610130565b3480156101ac57600080fd5b506101136101bb36600461171a565b610812565b3480156101cc57600080fd5b50600454610126565b3480156101e157600080fd5b506101266101f0366004611733565b6001600160a01b031660009081526005602052604090205490565b34801561021757600080fd5b5061011361022636600461174e565b61094a565b34801561023757600080fd5b50610113610c1b565b34801561024c57600080fd5b5061026061025b366004611733565b610c51565b6040516101309190611770565b34801561027957600080fd5b506101266102883660046117fb565b610d29565b34801561029957600080fd5b506000546001600160a01b0316610188565b3480156102b757600080fd5b50610126610d70565b3480156102cc57600080fd5b506102606102db36600461171a565b610e10565b3480156102ec57600080fd5b506101136102fb36600461171a565b610eb7565b34801561030c57600080fd5b5061012661031b36600461171a565b611079565b34801561032c57600080fd5b5061011361033b366004611733565b611163565b34801561034c57600080fd5b5061026061035b3660046117fb565b6111fb565b34801561036c57600080fd5b5061012661037b366004611733565b611217565b34801561038c57600080fd5b5061012661039b36600461171a565b611241565b6000546001600160a01b031633146103d35760405162461bcd60e51b81526004016103ca90611825565b60405180910390fd5b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610436919061185a565b10156104bd5760405162461bcd60e51b815260206004820152604a60248201527f546f6b656e56657374696e673a2063616e6e6f7420637265617465207665737460448201527f696e67207363686564756c652062656361757365206e6f742073756666696369606482015269656e7420746f6b656e7360b01b608482015260a4016103ca565b600084116105185760405162461bcd60e51b815260206004820152602260248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e604482015261020360f41b60648201526084016103ca565b600081116105685760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e203060448201526064016103ca565b60018310156105cf5760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a20736c696365506572696f645365636f6e647360448201526c206d757374206265203e3d203160981b60648201526084016103ca565b604051630f7c469f60e41b81526001600160a01b0388166004820152600090309063f7c469f090602401602060405180830381865afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a919061185a565b905060006106488789611889565b90506040518061014001604052806001151581526020018a6001600160a01b03168152602001828152602001898152602001878152602001868152602001851515815260200184815260200160008152602001600015158152506003600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548160ff021916908315150217905550905050826004546107919190611889565b6004556002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018390556001600160a01b038a16600090815260056020526040902054906107ea908290611889565b6001600160a01b03909a16600090815260056020526040902099909955505050505050505050565b6000546001600160a01b0316331461083c5760405162461bcd60e51b81526004016103ca90611825565b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f919061185a565b10156109015760405162461bcd60e51b815260206004820152602b60248201527f546f6b656e56657374696e673a206e6f7420656e6f756768207769746864726160448201526a7761626c652066756e647360a81b60648201526084016103ca565b6109476109166000546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836112c9565b50565b60026001540361099c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103ca565b60026001908155600083815260036020526040902054839160ff9091161515146109c557600080fd5b60008181526003602052604090206008015460ff16156109e457600080fd5b6000838152600360205260408120805491549091336001600160a01b03610100909204821681149291909116148180610a1a5750805b610a975760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656064820152616e7360f01b608482015260a4016103ca565b6040805161014081018252845460ff808216151583526001600160a01b03610100928390041660208401526001870154938301939093526002860154606083015260038601546080830152600486015460a083015260058601548316151560c0830152600686015460e083015260078601549082015260088501549091161515610120820152600090610b2990611320565b905085811015610ba15760405162461bcd60e51b815260206004820152603d60248201527f546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b60448201527f656e732c206e6f7420656e6f7567682076657374656420746f6b656e7300000060648201526084016103ca565b858460070154610bb19190611889565b600785015583546004546101009091046001600160a01b031690610bd69088906118a1565b600455610c0d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682896112c9565b505060018055505050505050565b6000546001600160a01b03163314610c455760405162461bcd60e51b81526004016103ca90611825565b610c4f60006113f1565b565b610c59611627565b6001600160a01b03821660009081526005602052604081205460039190610c88908590610288906001906118a1565b81526020808201929092526040908101600020815161014081018352815460ff808216151583526001600160a01b036101009283900416958301959095526001830154938201939093526002820154606082015260038201546080820152600482015460a082015260058201548416151560c0820152600682015460e082015260078201549281019290925260080154909116151561012082015292915050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b600480546040516370a0823160e01b815230928101929092526000917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ddd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e01919061185a565b610e0b91906118a1565b905090565b610e18611627565b50600090815260036020818152604092839020835161014081018552815460ff808216151583526001600160a01b0361010092839004169483019490945260018301549582019590955260028201546060820152928101546080840152600481015460a084015260058101548216151560c0840152600681015460e0840152600781015493830193909352600890920154909116151561012082015290565b6000546001600160a01b03163314610ee15760405162461bcd60e51b81526004016103ca90611825565b600081815260036020526040902054819060ff161515600114610f0357600080fd5b60008181526003602052604090206008015460ff1615610f2257600080fd5b6000828152600360205260409020600581015460ff161515600114610f985760405162461bcd60e51b815260206004820152602660248201527f546f6b656e56657374696e673a2076657374696e67206973206e6f74207265766044820152656f6361626c6560d01b60648201526084016103ca565b6040805161014081018252825460ff808216151583526001600160a01b03610100928390041660208401526001850154938301939093526002840154606083015260038401546080830152600484015460a083015260058401548316151560c0830152600684015460e08301526007840154908201526008830154909116151561012082015260009061102a90611320565b9050801561103c5761103c848261094a565b60008260070154836006015461105291906118a1565b90508060045461106291906118a1565b6004555050600801805460ff191660011790555050565b600081815260036020526040812054829060ff16151560011461109b57600080fd5b60008181526003602052604090206008015460ff16156110ba57600080fd5b600083815260036020818152604092839020835161014081018552815460ff808216151583526001600160a01b0361010092839004169483019490945260018301549582019590955260028201546060820152928101546080840152600481015460a084015260058101548216151560c0840152600681015460e0840152600781015493830193909352600883015416151561012082015261115b90611320565b949350505050565b6000546001600160a01b0316331461118d5760405162461bcd60e51b81526004016103ca90611825565b6001600160a01b0381166111f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ca565b610947816113f1565b611203611627565b6112106102db8484610d29565b9392505050565b6001600160a01b03811660009081526005602052604081205461123b908390610d29565b92915050565b600061124c60025490565b82106112a45760405162461bcd60e51b815260206004820152602160248201527f546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e646044820152607360f81b60648201526084016103ca565b600282815481106112b7576112b76118b8565b90600052602060002001549050919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261131b908490611441565b505050565b6040810151600090429081108061133e575061012083015115156001145b1561134c5750600092915050565b826080015183606001516113609190611889565b811061137b578261010001518360e0015161121091906118a1565b600083606001518261138d91906118a1565b60a085015190915060006113a182846118ce565b905060006113af83836118f0565b905060008760800151828960e001516113c891906118f0565b6113d291906118ce565b9050876101000151816113e591906118a1565b98975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611496826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115139092919063ffffffff16565b80519091501561131b57808060200190518101906114b4919061190f565b61131b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103ca565b606061115b8484600085856001600160a01b0385163b6115755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ca565b600080866001600160a01b03168587604051611591919061195c565b60006040518083038185875af1925050503d80600081146115ce576040519150601f19603f3d011682016040523d82523d6000602084013e6115d3565b606091505b50915091506115e38282866115ee565b979650505050505050565b606083156115fd575081611210565b82511561160d5782518084602001fd5b8160405162461bcd60e51b81526004016103ca9190611978565b60405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b80356001600160a01b03811681146116a057600080fd5b919050565b801515811461094757600080fd5b600080600080600080600060e0888a0312156116ce57600080fd5b6116d788611689565b96506020880135955060408801359450606088013593506080880135925060a0880135611703816116a5565b8092505060c0880135905092959891949750929550565b60006020828403121561172c57600080fd5b5035919050565b60006020828403121561174557600080fd5b61121082611689565b6000806040838503121561176157600080fd5b50508035926020909101359150565b8151151581526101408101602083015161179560208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c08301516117d160c084018215159052565b5060e083810151908301526101008084015190830152610120928301511515929091019190915290565b6000806040838503121561180e57600080fd5b61181783611689565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561186c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561189c5761189c611873565b500190565b6000828210156118b3576118b3611873565b500390565b634e487b7160e01b600052603260045260246000fd5b6000826118eb57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561190a5761190a611873565b500290565b60006020828403121561192157600080fd5b8151611210816116a5565b60005b8381101561194757818101518382015260200161192f565b83811115611956576000848401525b50505050565b6000825161196e81846020870161192c565b9190910192915050565b602081526000825180602084015261199781604085016020870161192c565b601f01601f1916919091016040019291505056fea26469706673582212207ae53f8b0550853100b20ba7c32750e065aca61614485f0107eb9ef9433bc97d64736f6c634300080e0033",
  "immutableReferences": {
    "802": [
      {
        "length": 32,
        "start": 360
      },
      {
        "length": 32,
        "start": 2336
      },
      {
        "length": 32,
        "start": 3046
      },
      {
        "length": 32,
        "start": 3470
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:8",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:8",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:8"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:8"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:8",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:8"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:8"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:8",
                "type": ""
              }
            ],
            "src": "14:290:8"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13008:8",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:8",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:8"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:8",
                "type": ""
              }
            ],
            "src": "14:177:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "347:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "359:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "349:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "349:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "349:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:8"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "332:3:8",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "337:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "341:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:19:8"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:31:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:50:8"
                  },
                  "nodeType": "YulIf",
                  "src": "293:70:8"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:8",
                "type": ""
              }
            ],
            "src": "196:173:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "416:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "470:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "479:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "482:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "472:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "472:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "472:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "439:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "460:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "453:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "453:13:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "446:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "446:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "436:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "436:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "429:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "429:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "426:60:8"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "405:5:8",
                "type": ""
              }
            ],
            "src": "374:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:490:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "713:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "722:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "725:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "715:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "715:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "715:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "687:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "696:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "683:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "683:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "708:3:8",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "679:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "676:53:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "738:39:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "767:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "748:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:29:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "738:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "786:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "813:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "824:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "809:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "809:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "796:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "786:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "837:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "864:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "875:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "860:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "860:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "847:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "837:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "888:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "915:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "926:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "898:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "898:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "888:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "939:43:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "966:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "977:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "962:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "949:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "949:33:8"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "939:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "991:46:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1021:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1032:3:8",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1017:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1017:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1004:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1004:33:8"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "995:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1068:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1046:21:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:28:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1046:28:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1083:15:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1093:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1083:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1107:43:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1134:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1145:3:8",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1130:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1117:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:33:8"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "1107:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "584:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "595:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "607:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "615:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "623:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "631:6:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "639:6:8",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "647:6:8",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "655:6:8",
                "type": ""
              }
            ],
            "src": "497:659:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1205:60:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1222:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1231:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1246:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1251:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1242:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1242:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1255:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1238:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1238:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1227:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1227:31:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1215:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:44:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1215:44:8"
                }
              ]
            },
            "name": "abi_encode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1189:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1196:3:8",
                "type": ""
              }
            ],
            "src": "1161:104:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1371:102:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1381:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1393:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1404:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1389:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1381:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1423:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1438:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1454:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1459:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1450:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1450:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1463:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1446:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1446:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1434:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1434:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1416:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1416:51:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1340:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1351:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1362:4:8",
                "type": ""
              }
            ],
            "src": "1270:203:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1548:110:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1594:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1603:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1606:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1596:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1596:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1596:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1569:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1578:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1565:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1565:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1590:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1561:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1561:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1558:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1619:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1642:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1629:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1629:23:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1619:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1514:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1525:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1537:6:8",
                "type": ""
              }
            ],
            "src": "1478:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1733:116:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1779:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1788:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1791:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1781:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1781:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1781:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1754:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1763:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1750:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1750:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1775:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1746:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1746:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1743:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1804:39:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1833:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1814:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1814:29:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1804:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1699:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1710:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1722:6:8",
                "type": ""
              }
            ],
            "src": "1663:186:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1941:161:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1987:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1996:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1999:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1989:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1989:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1989:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1962:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1971:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1958:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1958:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1983:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1954:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1954:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1951:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2012:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2035:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2022:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2022:23:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2012:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2054:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2081:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2092:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2077:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2077:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2064:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2064:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2054:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1899:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1910:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1922:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1930:6:8",
                "type": ""
              }
            ],
            "src": "1854:248:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2148:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2165:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2184:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2177:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2177:13:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2170:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2170:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2158:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2158:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2158:34:8"
                }
              ]
            },
            "name": "abi_encode_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2132:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2139:3:8",
                "type": ""
              }
            ],
            "src": "2107:91:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2368:863:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2378:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2390:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2401:3:8",
                        "type": "",
                        "value": "320"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2386:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2386:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2378:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2436:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2430:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2430:13:8"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2445:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2414:15:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2414:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2414:41:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2464:44:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2494:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2502:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2490:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2490:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2484:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:24:8"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "2468:12:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "2536:12:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2554:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2565:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2550:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2550:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2517:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:54:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2517:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2591:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2602:4:8",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2587:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2587:20:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2619:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2627:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2615:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2615:17:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2609:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2609:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2580:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:54:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2580:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2654:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2665:4:8",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2650:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2650:20:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2682:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2690:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2678:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2678:17:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2672:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2672:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2643:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2643:54:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2643:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2717:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2728:4:8",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2713:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2713:20:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2745:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2753:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2741:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2741:17:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2735:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2735:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2706:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2706:54:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2706:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2780:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2791:4:8",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2776:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:20:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2808:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2816:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2804:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2804:17:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2798:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2798:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2769:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2769:54:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2769:54:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2832:46:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2864:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2872:4:8",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2860:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2860:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2854:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2854:24:8"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "2836:14:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "2903:14:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2923:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2934:4:8",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2919:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2919:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2887:15:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2887:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2887:53:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2960:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2971:4:8",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2956:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2956:20:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2988:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2996:4:8",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2984:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2984:17:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2978:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2978:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2949:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2949:54:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2949:54:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3012:16:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3022:6:8",
                    "type": "",
                    "value": "0x0100"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3016:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3048:9:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3059:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3044:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3044:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3074:6:8"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3082:2:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3070:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3070:15:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3064:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3064:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3037:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3037:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3037:50:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3096:16:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3106:6:8",
                    "type": "",
                    "value": "0x0120"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3100:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3121:44:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3153:6:8"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3161:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3149:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3149:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3143:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3143:22:8"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_2",
                      "nodeType": "YulTypedName",
                      "src": "3125:14:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "3190:14:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3210:9:8"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3221:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3206:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3206:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3174:15:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3174:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3174:51:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_VestingSchedule_$799_memory_ptr__to_t_struct$_VestingSchedule_$799_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2337:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2348:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2359:4:8",
                "type": ""
              }
            ],
            "src": "2203:1028:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3323:167:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3369:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3378:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3381:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3371:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3371:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3371:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3344:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3353:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3340:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3340:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3365:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3336:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3336:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3333:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3394:39:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3423:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3404:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3404:29:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3394:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3442:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3469:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3480:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3465:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3465:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3452:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3452:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3442:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3281:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3292:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3304:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3312:6:8",
                "type": ""
              }
            ],
            "src": "3236:254:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3596:76:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3606:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3618:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3629:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3614:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3614:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3606:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3648:9:8"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3659:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3641:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:25:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3641:25:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3565:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3576:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3587:4:8",
                "type": ""
              }
            ],
            "src": "3495:177:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3747:110:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3793:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3802:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3805:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3795:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3795:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3795:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3768:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3777:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3764:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3764:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3789:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3760:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3760:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3757:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3818:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3841:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3828:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3828:23:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3818:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3713:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3724:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3736:6:8",
                "type": ""
              }
            ],
            "src": "3677:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4036:182:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4053:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4064:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4046:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4046:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4046:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4087:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4098:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4083:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4083:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4103:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4076:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4076:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4076:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4126:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4137:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4122:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4122:18:8"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4142:34:8",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4115:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4115:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4115:62:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4186:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4198:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4209:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4194:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4194:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4186:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4013:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4027:4:8",
                "type": ""
              }
            ],
            "src": "3862:356:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4304:103:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4350:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4359:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4362:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4352:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4352:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4352:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4325:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4334:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4321:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4321:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4346:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4317:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4317:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4314:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4375:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4391:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4385:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4385:16:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4375:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4270:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4281:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4293:6:8",
                "type": ""
              }
            ],
            "src": "4223:184:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4586:304:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4603:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4614:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4596:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4596:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4596:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4637:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4648:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4633:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4633:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4653:2:8",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4626:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4626:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4626:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4676:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4687:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4672:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4672:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2063616e6e6f74206372656174652076657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4692:34:8",
                        "type": "",
                        "value": "TokenVesting: cannot create vest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4665:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4665:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4665:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4747:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4758:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4743:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4743:18:8"
                      },
                      {
                        "hexValue": "696e67207363686564756c652062656361757365206e6f742073756666696369",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4763:34:8",
                        "type": "",
                        "value": "ing schedule because not suffici"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4736:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4736:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4818:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4829:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4814:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4814:19:8"
                      },
                      {
                        "hexValue": "656e7420746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4835:12:8",
                        "type": "",
                        "value": "ent tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4807:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4807:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4807:41:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4857:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4869:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4880:3:8",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4865:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4865:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4857:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e2eac501d5068c970a209489eb1d1ae38aa7e39d93aa968139e8303982c5b39d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4563:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4577:4:8",
                "type": ""
              }
            ],
            "src": "4412:478:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5069:224:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5086:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5097:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5079:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5079:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5079:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5120:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5131:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5116:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5116:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5136:2:8",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5109:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5109:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5109:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5159:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5170:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5155:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5155:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206475726174696f6e206d757374206265203e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5175:34:8",
                        "type": "",
                        "value": "TokenVesting: duration must be >"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5148:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5148:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5148:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5230:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5241:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5226:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5226:18:8"
                      },
                      {
                        "hexValue": "2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5246:4:8",
                        "type": "",
                        "value": " 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5219:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5219:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5219:32:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5260:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5272:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5283:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5268:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5268:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5260:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aef052e3b5fc0eb29cdf76f24ed1e0239550c0a7a9e6afe7257b226df64ceb86__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5046:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5060:4:8",
                "type": ""
              }
            ],
            "src": "4895:398:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5472:182:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5489:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5500:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5482:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5482:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5482:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5523:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5534:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5519:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5519:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5539:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5512:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5512:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5512:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5562:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5573:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5558:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5558:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20616d6f756e74206d757374206265203e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5578:34:8",
                        "type": "",
                        "value": "TokenVesting: amount must be > 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5551:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5551:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5551:62:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5622:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5634:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5645:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5630:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5630:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5622:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5449:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5463:4:8",
                "type": ""
              }
            ],
            "src": "5298:356:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5833:235:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5850:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5861:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5843:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5843:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5843:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5884:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5895:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5880:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5880:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5900:2:8",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5873:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5873:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5873:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5923:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5934:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5919:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5919:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20736c696365506572696f645365636f6e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5939:34:8",
                        "type": "",
                        "value": "TokenVesting: slicePeriodSeconds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5912:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5912:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5912:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5994:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6005:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5990:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5990:18:8"
                      },
                      {
                        "hexValue": "206d757374206265203e3d2031",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6010:15:8",
                        "type": "",
                        "value": " must be >= 1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5983:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5983:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5983:43:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6035:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6047:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6058:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6043:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6043:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6035:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2a09ee7f895363f516ca65be926093c2b80d1ec647ac6f8bc2bc1e112800d5cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5810:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5824:4:8",
                "type": ""
              }
            ],
            "src": "5659:409:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6154:103:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6200:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6209:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6212:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6202:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6202:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6202:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6175:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6184:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6171:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6171:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6196:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6167:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6167:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "6164:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6225:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6241:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6235:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6235:16:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6225:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6120:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6131:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6143:6:8",
                "type": ""
              }
            ],
            "src": "6073:184:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6294:95:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6311:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6318:3:8",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6323:10:8",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6314:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6314:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6304:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6304:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6304:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6351:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6354:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6344:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6344:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6344:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6375:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6378:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6368:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6368:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6368:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6262:127:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6442:80:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6469:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6471:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6471:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6471:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6458:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6465:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6461:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6461:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6455:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6455:13:8"
                  },
                  "nodeType": "YulIf",
                  "src": "6452:39:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6500:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6511:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6514:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6507:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6507:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6500:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6425:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6428:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6434:3:8",
                "type": ""
              }
            ],
            "src": "6394:128:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6701:233:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6718:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6729:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6711:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6711:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6711:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6752:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6763:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6748:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6748:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6768:2:8",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6741:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6741:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6741:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6791:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6802:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6787:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6787:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206e6f7420656e6f7567682077697468647261",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6807:34:8",
                        "type": "",
                        "value": "TokenVesting: not enough withdra"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6780:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6780:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6780:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6862:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6873:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6858:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6858:18:8"
                      },
                      {
                        "hexValue": "7761626c652066756e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6878:13:8",
                        "type": "",
                        "value": "wable funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6851:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6851:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6851:41:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6901:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6913:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6924:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6909:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6909:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6901:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d3208b577e75abf50e25ea56b6fb6f95b34754fbb6b3a3f83a4c87e183c8b693__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6678:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6692:4:8",
                "type": ""
              }
            ],
            "src": "6527:407:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7113:181:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7130:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7141:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7123:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7123:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7123:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7164:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7175:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7160:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7160:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7180:2:8",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7153:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7153:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7153:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7203:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7214:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7199:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7199:18:8"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7219:33:8",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7192:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7192:61:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7192:61:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7262:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7274:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7285:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7270:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7270:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7262:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7090:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7104:4:8",
                "type": ""
              }
            ],
            "src": "6939:355:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7473:296:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7490:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7501:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7483:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7483:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7483:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7524:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7535:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7520:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7520:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7540:2:8",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7513:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7513:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7513:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7563:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7574:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7559:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7559:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206f6e6c792062656e65666963696172792061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7579:34:8",
                        "type": "",
                        "value": "TokenVesting: only beneficiary a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7552:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7552:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7552:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7634:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7645:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7630:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7630:18:8"
                      },
                      {
                        "hexValue": "6e64206f776e65722063616e2072656c656173652076657374656420746f6b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7650:34:8",
                        "type": "",
                        "value": "nd owner can release vested toke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7623:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7623:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7623:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7705:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7716:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7701:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7701:19:8"
                      },
                      {
                        "hexValue": "6e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7722:4:8",
                        "type": "",
                        "value": "ns"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7694:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7694:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7694:33:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7736:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7748:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7759:3:8",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7744:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7744:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7736:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bd611d281859d9ca31d28e68329b9c1d51f5452ce3844d60d556eda1e2459a76__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7450:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7464:4:8",
                "type": ""
              }
            ],
            "src": "7299:470:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7948:251:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7965:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7976:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7958:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7958:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7958:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7999:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8010:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7995:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7995:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8015:2:8",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7988:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7988:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7988:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8038:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8049:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8034:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8034:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8054:34:8",
                        "type": "",
                        "value": "TokenVesting: cannot release tok"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8027:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8027:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8027:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8109:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8120:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8105:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8105:18:8"
                      },
                      {
                        "hexValue": "656e732c206e6f7420656e6f7567682076657374656420746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8125:31:8",
                        "type": "",
                        "value": "ens, not enough vested tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8098:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8098:59:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8098:59:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8166:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8178:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8189:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8174:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8174:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8166:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51be555965f95e85e66dc8a38c407d35ee8ab28ac3bdb4e2ae0f84a440da9617__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7925:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7939:4:8",
                "type": ""
              }
            ],
            "src": "7774:425:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8253:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8275:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8277:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8277:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8277:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8269:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8272:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8266:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8266:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "8263:34:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8306:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8318:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8321:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8314:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8314:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8306:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8235:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8238:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8244:4:8",
                "type": ""
              }
            ],
            "src": "8204:125:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8481:147:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8498:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8511:2:8",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8515:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8507:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8507:15:8"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8528:26:8",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "8524:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8524:31:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8503:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8503:53:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8491:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8491:66:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8491:66:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8577:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8582:2:8",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8573:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8573:12:8"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8587:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8566:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8566:28:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8566:28:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8603:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8614:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8619:2:8",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8610:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8610:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8603:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8449:3:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8454:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8462:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8473:3:8",
                "type": ""
              }
            ],
            "src": "8334:294:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8807:228:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8824:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8835:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8817:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8817:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8817:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8858:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8869:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8854:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8854:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8874:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8847:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8847:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8847:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8897:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8908:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8893:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8893:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2076657374696e67206973206e6f7420726576",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8913:34:8",
                        "type": "",
                        "value": "TokenVesting: vesting is not rev"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8886:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8886:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8886:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8968:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8979:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8964:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8964:18:8"
                      },
                      {
                        "hexValue": "6f6361626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8984:8:8",
                        "type": "",
                        "value": "ocable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8957:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8957:36:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8957:36:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9002:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9014:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9025:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9010:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9010:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9002:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_582d8774ffe94a897813710ca5f4ba3e235ee83fc30565f07b97cb0c05bc94f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8784:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8798:4:8",
                "type": ""
              }
            ],
            "src": "8633:402:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9214:228:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9231:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9242:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9224:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9224:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9224:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9265:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9276:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9261:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9261:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9281:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9254:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9254:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9254:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9304:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9315:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9300:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9300:18:8"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9320:34:8",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9293:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9293:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9293:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9375:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9386:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9371:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9371:18:8"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9391:8:8",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9364:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9364:36:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9364:36:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9409:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9421:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9432:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9417:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9417:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9409:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9191:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9205:4:8",
                "type": ""
              }
            ],
            "src": "9040:402:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9621:223:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9638:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9649:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9631:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9631:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9631:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9672:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9683:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9668:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9668:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9688:2:8",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9661:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9661:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9661:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9711:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9722:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9707:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9707:18:8"
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9727:34:8",
                        "type": "",
                        "value": "TokenVesting: index out of bound"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9700:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9700:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9700:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9782:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9793:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9778:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9778:18:8"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9798:3:8",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9771:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9771:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9771:31:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9811:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9823:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9834:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9819:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9819:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9811:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_abd18f3555caa4563ffa0f63bfdb073588de08ae6c678a44745ae051c21c5cf4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9598:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9612:4:8",
                "type": ""
              }
            ],
            "src": "9447:397:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9881:95:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9898:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9905:3:8",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9910:10:8",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9901:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9901:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9891:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9891:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9891:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9938:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9941:4:8",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9931:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9931:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9931:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9962:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9965:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9955:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9955:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9955:15:8"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "9849:127:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10110:145:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10120:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10132:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10143:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10128:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10128:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10120:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10162:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10177:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10193:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10198:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10189:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10189:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10202:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10185:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10185:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10173:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10173:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10155:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10155:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10155:51:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10226:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10237:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10222:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10222:18:8"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10242:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10215:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10215:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10215:34:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10071:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10082:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10090:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10101:4:8",
                "type": ""
              }
            ],
            "src": "9981:274:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10306:171:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10337:111:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10358:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10365:3:8",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10370:10:8",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10361:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10361:20:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10351:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10351:31:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10351:31:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10402:1:8",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10405:4:8",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10395:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10395:15:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10395:15:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10430:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10433:4:8",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10423:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10423:15:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10423:15:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10326:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10319:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10319:9:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10316:132:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10457:14:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10466:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10469:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10462:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10462:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10457:1:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10291:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10294:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10300:1:8",
                "type": ""
              }
            ],
            "src": "10260:217:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10534:116:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10593:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10595:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10595:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10595:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10565:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10558:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10558:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10551:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10551:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10573:1:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10584:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10580:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10580:6:8"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10588:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10576:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10576:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10570:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10570:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10547:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10547:45:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10544:71:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10624:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10639:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10642:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10635:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10635:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10624:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10513:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10516:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10522:7:8",
                "type": ""
              }
            ],
            "src": "10482:168:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10733:167:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10779:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10788:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10791:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10781:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10781:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10781:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10754:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10763:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10750:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10750:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10775:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10746:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10746:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10743:52:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10804:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10823:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10817:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10817:16:8"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10808:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10864:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "10842:21:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10842:28:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10842:28:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10879:15:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10889:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10879:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10699:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10710:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10722:6:8",
                "type": ""
              }
            ],
            "src": "10655:245:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11079:232:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11096:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11107:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11089:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11089:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11089:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11130:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11141:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11126:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11126:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11146:2:8",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11119:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11119:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11119:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11169:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11180:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11165:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11165:18:8"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11185:34:8",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11158:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11158:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11158:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11240:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11251:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11236:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11236:18:8"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11256:12:8",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11229:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11229:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11229:40:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11278:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11290:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11301:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11286:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11286:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11278:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11056:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11070:4:8",
                "type": ""
              }
            ],
            "src": "10905:406:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11490:228:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11507:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11518:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11500:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11500:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11500:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11541:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11552:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11537:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11537:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11557:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11530:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11530:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11530:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11580:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11591:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11576:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11576:18:8"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11596:34:8",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11569:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11569:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11569:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11651:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11662:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11647:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11647:18:8"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11667:8:8",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11640:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11640:36:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11640:36:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11685:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11697:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11708:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11693:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11693:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11685:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11467:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11481:4:8",
                "type": ""
              }
            ],
            "src": "11316:402:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11897:179:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11914:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11925:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11907:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11907:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11907:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11948:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11959:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11944:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11944:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11964:2:8",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11937:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11937:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11937:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11987:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11998:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11983:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11983:18:8"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12003:31:8",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11976:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11976:59:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11976:59:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12044:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12056:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12067:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12052:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12052:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12044:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11874:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11888:4:8",
                "type": ""
              }
            ],
            "src": "11723:353:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12134:205:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12144:10:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12153:1:8",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12148:1:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12213:63:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12238:3:8"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12243:1:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12234:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12234:11:8"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12257:3:8"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12262:1:8"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12253:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12253:11:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12247:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12247:18:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12227:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12227:39:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12227:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12174:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12177:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12171:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12171:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12185:19:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12187:15:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12196:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12199:2:8",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12192:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12192:10:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12187:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12167:3:8",
                    "statements": []
                  },
                  "src": "12163:113:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12302:31:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12315:3:8"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12320:6:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12311:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12311:16:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12329:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12304:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12304:27:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12304:27:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12291:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12294:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12288:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12288:13:8"
                  },
                  "nodeType": "YulIf",
                  "src": "12285:48:8"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12112:3:8",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "12117:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12122:6:8",
                "type": ""
              }
            ],
            "src": "12081:258:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12481:137:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12491:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12511:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12505:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12505:13:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12495:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12553:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12561:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12549:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12549:17:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12568:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12573:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "12527:21:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12527:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12527:53:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12589:23:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12600:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12605:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12596:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12596:16:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12589:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12457:3:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12462:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12473:3:8",
                "type": ""
              }
            ],
            "src": "12344:274:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12744:262:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12761:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12772:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12754:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12754:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12754:21:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12784:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12804:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12798:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12798:13:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12788:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12831:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12842:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12827:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12827:18:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12847:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12820:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12820:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12820:34:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12889:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12897:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12885:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12885:15:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12906:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12917:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12902:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12902:18:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12922:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "12863:21:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12863:66:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12863:66:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12938:62:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12954:9:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12973:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12981:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12969:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12969:15:8"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12990:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "12986:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12986:7:8"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12965:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12965:29:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12950:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12950:45:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12997:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12946:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12946:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12938:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12713:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12724:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12735:4:8",
                "type": ""
              }
            ],
            "src": "12623:383:8"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        let value := calldataload(add(headStart, 160))\n        validator_revert_bool(value)\n        value5 := value\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_struct$_VestingSchedule_$799_memory_ptr__to_t_struct$_VestingSchedule_$799_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        abi_encode_bool(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_address(memberValue0, add(headStart, 0x20))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        let memberValue0_1 := mload(add(value0, 0xc0))\n        abi_encode_bool(memberValue0_1, add(headStart, 0xc0))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        mstore(add(headStart, _1), mload(add(value0, _1)))\n        let _2 := 0x0120\n        let memberValue0_2 := mload(add(value0, _2))\n        abi_encode_bool(memberValue0_2, add(headStart, _2))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e2eac501d5068c970a209489eb1d1ae38aa7e39d93aa968139e8303982c5b39d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"TokenVesting: cannot create vest\")\n        mstore(add(headStart, 96), \"ing schedule because not suffici\")\n        mstore(add(headStart, 128), \"ent tokens\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_aef052e3b5fc0eb29cdf76f24ed1e0239550c0a7a9e6afe7257b226df64ceb86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"TokenVesting: duration must be >\")\n        mstore(add(headStart, 96), \" 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"TokenVesting: amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a09ee7f895363f516ca65be926093c2b80d1ec647ac6f8bc2bc1e112800d5cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"TokenVesting: slicePeriodSeconds\")\n        mstore(add(headStart, 96), \" must be >= 1\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d3208b577e75abf50e25ea56b6fb6f95b34754fbb6b3a3f83a4c87e183c8b693__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"TokenVesting: not enough withdra\")\n        mstore(add(headStart, 96), \"wable funds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd611d281859d9ca31d28e68329b9c1d51f5452ce3844d60d556eda1e2459a76__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"TokenVesting: only beneficiary a\")\n        mstore(add(headStart, 96), \"nd owner can release vested toke\")\n        mstore(add(headStart, 128), \"ns\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_51be555965f95e85e66dc8a38c407d35ee8ab28ac3bdb4e2ae0f84a440da9617__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"TokenVesting: cannot release tok\")\n        mstore(add(headStart, 96), \"ens, not enough vested tokens\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_582d8774ffe94a897813710ca5f4ba3e235ee83fc30565f07b97cb0c05bc94f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"TokenVesting: vesting is not rev\")\n        mstore(add(headStart, 96), \"ocable\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_abd18f3555caa4563ffa0f63bfdb073588de08ae6c678a44745ae051c21c5cf4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"TokenVesting: index out of bound\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "331:11591:6:-:0;;;2236:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:5;921:18:0;:32::i;:::-;1701:1:1;1806:22;;-1:-1:-1;;;;;2282:22:6;;2274:31;;;;;;-1:-1:-1;;;;;2315:23:6;;;331:11591;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;:::-;331:11591:6;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "331:11591:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8452:138;;;;;;;;;;-1:-1:-1;8557:19:6;:26;8452:138;;;160:25:8;;;148:2;133:18;8452:138:6;;;;;;;;4582:1364;;;;;;;;;;-1:-1:-1;4582:1364:6;;;;;:::i;:::-;;:::i;3841:101::-;;;;;;;;;;-1:-1:-1;3928:6:6;3841:101;;;-1:-1:-1;;;;;1434:32:8;;;1416:51;;1404:2;1389:18;3841:101:6;1270:203:8;6911:223:6;;;;;;;;;;-1:-1:-1;6911:223:6;;;;;:::i;:::-;;:::i;3602:135::-;;;;;;;;;;-1:-1:-1;3703:27:6;;3602:135;;2563:168;;;;;;;;;;-1:-1:-1;2563:168:6;;;;;:::i;:::-;-1:-1:-1;;;;;2691:33:6;2666:7;2691:33;;;:19;:33;;;;;;;2563:168;7307:1001;;;;;;;;;;-1:-1:-1;7307:1001:6;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;10118:249:6:-;;;;;;;;;;-1:-1:-1;10118:249:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10469:201::-;;;;;;;;;;-1:-1:-1;10469:201:6;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;9530:170:6;;;;;;;;;;;;;:::i;9217:181::-;;;;;;;;;;-1:-1:-1;9217:181:6;;;;;:::i;:::-;;:::i;6095:695::-;;;;;;;;;;-1:-1:-1;6095:695:6;;;;;:::i;:::-;;:::i;8737:323::-;;;;;;;;;;-1:-1:-1;8737:323:6;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;3233:234:6:-;;;;;;;;;;-1:-1:-1;3233:234:6;;;;;:::i;:::-;;:::i;9806:218::-;;;;;;;;;;-1:-1:-1;9806:218:6;;;;;:::i;:::-;;:::i;2844:226::-;;;;;;;;;;-1:-1:-1;2844:226:6;;;;;:::i;:::-;;:::i;4582:1364::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;4906:7:6::1;4874:4;-1:-1:-1::0;;;;;4874:26:6::1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;4853:160;;;::::0;-1:-1:-1;;;4853:160:6;;4614:2:8;4853:160:6::1;::::0;::::1;4596:21:8::0;4653:2;4633:18;;;4626:30;4692:34;4672:18;;;4665:62;4763:34;4743:18;;;4736:62;-1:-1:-1;;;4814:19:8;;;4807:41;4865:19;;4853:160:6::1;4412:478:8::0;4853:160:6::1;5043:1;5031:9;:13;5023:60;;;::::0;-1:-1:-1;;;5023:60:6;;5097:2:8;5023:60:6::1;::::0;::::1;5079:21:8::0;5136:2;5116:18;;;5109:30;5175:34;5155:18;;;5148:62;-1:-1:-1;;;5226:18:8;;;5219:32;5268:19;;5023:60:6::1;4895:398:8::0;5023:60:6::1;5111:1;5101:7;:11;5093:56;;;::::0;-1:-1:-1;;;5093:56:6;;5500:2:8;5093:56:6::1;::::0;::::1;5482:21:8::0;;;5519:18;;;5512:30;5578:34;5558:18;;;5551:62;5630:18;;5093:56:6::1;5298:356:8::0;5093:56:6::1;5190:1;5167:19;:24;;5159:82;;;::::0;-1:-1:-1;;;5159:82:6;;5861:2:8;5159:82:6::1;::::0;::::1;5843:21:8::0;5900:2;5880:18;;;5873:30;5939:34;5919:18;;;5912:62;-1:-1:-1;;;5990:18:8;;;5983:43;6043:19;;5159:82:6::1;5659:409:8::0;5159:82:6::1;5279:56;::::0;-1:-1:-1;;;5279:56:6;;-1:-1:-1;;;;;1434:32:8;;5279:56:6::1;::::0;::::1;1416:51:8::0;5251:25:6::1;::::0;5279:4:::1;::::0;:42:::1;::::0;1389:18:8;;5279:56:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5251:84:::0;-1:-1:-1;5345:13:6::1;5361:15;5370:6:::0;5361;:15:::1;:::i;:::-;5345:31;;5424:243;;;;;;;;5453:4;5424:243;;;;;;5471:12;-1:-1:-1::0;;;;;5424:243:6::1;;;;;5497:5;5424:243;;;;5516:6;5424:243;;;;5536:9;5424:243;;;;5559:19;5424:243;;;;5592:10;5424:243;;;;;;5616:7;5424:243;;;;5637:1;5424:243;;;;5652:5;5424:243;;;;::::0;5386:16:::1;:35;5403:17;5386:35;;;;;;;;;;;:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5386:281:6::1;;;;;-1:-1:-1::0;;;;;5386:281:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5737:7;5707:27;;:37;;;;:::i;:::-;5677:27;:67:::0;5754:19:::1;:43:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;5837:33:6;::::1;-1:-1:-1::0;5837:33:6;;;:19:::1;5754:43;5837:33:::0;;;;;;5916:23:::1;::::0;5837:33;;5916:23:::1;:::i;:::-;-1:-1:-1::0;;;;;5880:33:6;;::::1;;::::0;;;:19:::1;:33;::::0;;;;:59;;;;-1:-1:-1;;;;;;;;;4582:1364:6:o;6911:223::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7027:6:6::1;6995:4;-1:-1:-1::0;;;;;6995:26:6::1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;6987:94;;;::::0;-1:-1:-1;;;6987:94:6;;6729:2:8;6987:94:6::1;::::0;::::1;6711:21:8::0;6768:2;6748:18;;;6741:30;6807:34;6787:18;;;6780:62;-1:-1:-1;;;6858:18:8;;;6851:41;6909:19;;6987:94:6::1;6527:407:8::0;6987:94:6::1;7091:36;7111:7;1082::0::0;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85;7111:7:6::1;-1:-1:-1::0;;;;;7091:6:6::1;:19;::::0;7120:6;7091:19:::1;:36::i;:::-;6911:223:::0;:::o;7307:1001::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;7141:2:8;2317:63:1;;;7123:21:8;7180:2;7160:18;;;7153:30;7219:33;7199:18;;;7192:61;7270:18;;2317:63:1;6939:355:8;2317:63:1;1744:1;2455:7;:18;;;1972:35:6::1;::::0;;;:16:::1;:35;::::0;;;;:47;7465:17;;1972:47:::1;::::0;;::::1;:55;;;1964:64;;;::::0;::::1;;2046:35;::::0;;;:16:::1;:35;::::0;;;;:43:::1;;::::0;::::1;;:52;2038:61;;;::::0;::::1;;7493:39:::2;7535:35:::0;;;:16:::2;:35;::::0;;;;7615:27;;1108:6:0;;7535:35:6;;7601:10:::2;-1:-1:-1::0;;;;;7615:27:6::2;::::0;;::::2;::::0;::::2;7601:41:::0;::::2;::::0;1108:6:0;;;;7667:21:6::2;7601:41:::0;;7719:24:::2;;;7736:7;7719:24;7698:137;;;::::0;-1:-1:-1;;;7698:137:6;;7501:2:8;7698:137:6::2;::::0;::::2;7483:21:8::0;7540:2;7520:18;;;7513:30;7579:34;7559:18;;;7552:62;7650:34;7630:18;;;7623:62;-1:-1:-1;;;7701:19:8;;;7694:33;7744:19;;7698:137:6::2;7299:470:8::0;7698:137:6::2;7868:41;::::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;;;::::0;;-1:-1:-1;;;;;7868:41:6::2;::::0;;;::::2;;;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;::::2;;;::::0;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;::::2;;;::::0;;;;7845:20:::2;::::0;7868:41:::2;::::0;:24:::2;:41::i;:::-;7845:64;;7943:6;7927:12;:22;;7919:96;;;::::0;-1:-1:-1;;;7919:96:6;;7976:2:8;7919:96:6::2;::::0;::::2;7958:21:8::0;8015:2;7995:18;;;7988:30;8054:34;8034:18;;;8027:62;8125:31;8105:18;;;8098:59;8174:19;;7919:96:6::2;7774:425:8::0;7919:96:6::2;8079:6;8052:15;:24;;;:33;;;;:::i;:::-;8025:24;::::0;::::2;:60:::0;8140:27;;8208::::2;::::0;8140::::2;::::0;;::::2;-1:-1:-1::0;;;;;8140:27:6::2;::::0;8208:36:::2;::::0;8238:6;;8208:36:::2;:::i;:::-;8178:27;:66:::0;8254:47:::2;-1:-1:-1::0;;;;;8254:6:6::2;:19;8274:18:::0;8294:6;8254:19:::2;:47::i;:::-;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;;;;;7307:1001:6:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;10118:249:6:-;10219:22;;:::i;:::-;-1:-1:-1;;;;;10327:27:6;;10259:101;10327:27;;;:19;:27;;;;;;10259:16;;:101;10276:83;;10319:6;;10327:31;;10357:1;;10327:31;:::i;10276:83::-;10259:101;;;;;;;;;;;;;;-1:-1:-1;10259:101:6;10252:108;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10252:108:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10118:249;-1:-1:-1;;10118:249:6:o;10469:201::-;10631:31;;-1:-1:-1;;8511:2:8;8507:15;;;8503:53;10631:31:6;;;8491:66:8;8573:12;;;8566:28;;;10596:7:6;;8610:12:8;;10631:31:6;;;;;;;;;;;;10621:42;;;;;;10614:49;;10469:201;;;;:::o;9530:170::-;9666:27;;;9632:31;;-1:-1:-1;;;9632:31:6;;9657:4;9632:31;;;1416:51:8;;;;9607:7:6;;9632:6;-1:-1:-1;;;;;9632:16:6;;;;1389:18:8;;9632:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;9625:68;;9530:170;:::o;9217:181::-;9316:22;;:::i;:::-;-1:-1:-1;9356:35:6;;;;:16;:35;;;;;;;;;9349:42;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9349:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9217:181::o;6095:695::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1972:35:6::1;::::0;;;:16:::1;:35;::::0;;;;:47;6211:17;;1972:47:::1;;:55;;:47:::0;:55:::1;1964:64;;;::::0;::::1;;2046:35;::::0;;;:16:::1;:35;::::0;;;;:43:::1;;::::0;::::1;;:52;2038:61;;;::::0;::::1;;6239:39:::2;6281:35:::0;;;:16:::2;:35;::::0;;;;6334:25:::2;::::0;::::2;::::0;::::2;;:33;;:25:::0;:33:::2;6326:84;;;::::0;-1:-1:-1;;;6326:84:6;;8835:2:8;6326:84:6::2;::::0;::::2;8817:21:8::0;8874:2;8854:18;;;8847:30;8913:34;8893:18;;;8886:62;-1:-1:-1;;;8964:18:8;;;8957:36;9010:19;;6326:84:6::2;8633:402:8::0;6326:84:6::2;6443:41;::::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;;;::::0;;-1:-1:-1;;;;;6443:41:6::2;::::0;;;::::2;;;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;::::2;;;::::0;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;::::2;;;::::0;;;;6420:20:::2;::::0;6443:41:::2;::::0;:24:::2;:41::i;:::-;6420:64:::0;-1:-1:-1;6497:16:6;;6494:85:::2;;6528:40;6536:17;6555:12;6528:7;:40::i;:::-;6588:18;6639:15;:24;;;6609:15;:27;;;:54;;;;:::i;:::-;6588:75;;6733:10;6703:27;;:40;;;;:::i;:::-;6673:27;:70:::0;-1:-1:-1;;6753:23:6::2;;:30:::0;;-1:-1:-1;;6753:30:6::2;6779:4;6753:30;::::0;;-1:-1:-1;;6095:695:6:o;8737:323::-;8900:7;1972:35;;;:16;:35;;;;;:47;8852:17;;1972:47;;:55;;:47;:55;1964:64;;;;;;2046:35;;;;:16;:35;;;;;:43;;;;;:52;2038:61;;;;;;8918:39:::1;8960:35:::0;;;:16:::1;:35;::::0;;;;;;;;9012:41;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;;::::0;;-1:-1:-1;;;;;9012:41:6::1;::::0;;;::::1;;::::0;;::::1;::::0;;;;;;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;;;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;::::1;;;::::0;;;;::::1;::::0;:24:::1;:41::i;:::-;9005:48:::0;8737:323;-1:-1:-1;;;;8737:323:6:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;9242:2:8;1998:73:0::1;::::0;::::1;9224:21:8::0;9281:2;9261:18;;;9254:30;9320:34;9300:18;;;9293:62;-1:-1:-1;;;9371:18:8;;;9364:36;9417:19;;1998:73:0::1;9040:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;3233:234:6:-:0;3343:22;;:::i;:::-;3383:77;3402:57;3445:6;3453:5;3402:42;:57::i;3383:77::-;3376:84;3233:234;-1:-1:-1;;;3233:234:6:o;9806:218::-;-1:-1:-1;;;;;9989:27:6;;9913:7;9989:27;;;:19;:27;;;;;;9938:79;;9981:6;;9938:42;:79::i;:::-;9931:86;9806:218;-1:-1:-1;;9806:218:6:o;2844:226::-;2922:7;2956:26;8557:19;:26;;8452:138;2956:26;2948:5;:34;2940:80;;;;-1:-1:-1;;;2940:80:6;;9649:2:8;2940:80:6;;;9631:21:8;9688:2;9668:18;;;9661:30;9727:34;9707:18;;;9700:62;-1:-1:-1;;;9778:18:8;;;9771:31;9819:19;;2940:80:6;9447:397:8;2940:80:6;3037:19;3057:5;3037:26;;;;;;;;:::i;:::-;;;;;;;;;3030:33;;2844:226;;;:::o;701:205:3:-;840:58;;;-1:-1:-1;;;;;10173:32:8;;840:58:3;;;10155:51:8;10222:18;;;;10215:34;;;840:58:3;;;;;;;;;;10128:18:8;;;;840:58:3;;;;;;;;-1:-1:-1;;;;;840:58:3;-1:-1:-1;;;840:58:3;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;10813:965:6:-;11006:21;;;;10921:7;;11897:15;;10992:35;;;10991:72;;-1:-1:-1;11032:23:6;;;;:31;;11059:4;11032:31;10991:72;10987:785;;;-1:-1:-1;11086:1:6;;10813:965;-1:-1:-1;;10813:965:6:o;10987:785::-;11147:15;:24;;;11123:15;:21;;;:48;;;;:::i;:::-;11108:11;:63;11104:668;;11224:15;:24;;;11194:15;:27;;;:54;;;;:::i;11104:668::-;11279:21;11317:15;:21;;;11303:11;:35;;;;:::i;:::-;11375:34;;;;11279:59;;-1:-1:-1;11352:20:6;11452:29;11375:34;11279:59;11452:29;:::i;:::-;11423:58;-1:-1:-1;11495:21:6;11519:36;11540:15;11423:58;11519:36;:::i;:::-;11495:60;;11569:20;11636:15;:24;;;11622:13;11592:15;:27;;;:43;;;;:::i;:::-;:68;;;;:::i;:::-;11569:91;;11704:15;:24;;;11689:12;:39;;;;:::i;:::-;11674:54;10813:965;-1:-1:-1;;;;;;;;10813:965:6:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3207:706:3:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:3;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:3;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:3;;11107:2:8;3811:85:3;;;11089:21:8;11146:2;11126:18;;;11119:30;11185:34;11165:18;;;11158:62;-1:-1:-1;;;11236:18:8;;;11229:40;11286:19;;3811:85:3;10905:406:8;3861:223:4;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;-1:-1:-1;;;;;1465:19:4;;;5228:60;;;;-1:-1:-1;;;5228:60:4;;11925:2:8;5228:60:4;;;11907:21:8;11964:2;11944:18;;;11937:30;12003:31;11983:18;;;11976:59;12052:18;;5228:60:4;11723:353:8;5228:60:4;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:4;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:4:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:4;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:4;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:173:8:-;264:20;;-1:-1:-1;;;;;313:31:8;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:118::-;460:5;453:13;446:21;439:5;436:32;426:60;;482:1;479;472:12;497:659;607:6;615;623;631;639;647;655;708:3;696:9;687:7;683:23;679:33;676:53;;;725:1;722;715:12;676:53;748:29;767:9;748:29;:::i;:::-;738:39;;824:2;813:9;809:18;796:32;786:42;;875:2;864:9;860:18;847:32;837:42;;926:2;915:9;911:18;898:32;888:42;;977:3;966:9;962:19;949:33;939:43;;1032:3;1021:9;1017:19;1004:33;1046:28;1068:5;1046:28;:::i;:::-;1093:5;1083:15;;;1145:3;1134:9;1130:19;1117:33;1107:43;;497:659;;;;;;;;;;:::o;1478:180::-;1537:6;1590:2;1578:9;1569:7;1565:23;1561:32;1558:52;;;1606:1;1603;1596:12;1558:52;-1:-1:-1;1629:23:8;;1478:180;-1:-1:-1;1478:180:8:o;1663:186::-;1722:6;1775:2;1763:9;1754:7;1750:23;1746:32;1743:52;;;1791:1;1788;1781:12;1743:52;1814:29;1833:9;1814:29;:::i;1854:248::-;1922:6;1930;1983:2;1971:9;1962:7;1958:23;1954:32;1951:52;;;1999:1;1996;1989:12;1951:52;-1:-1:-1;;2022:23:8;;;2092:2;2077:18;;;2064:32;;-1:-1:-1;1854:248:8:o;2203:1028::-;2430:13;;2177;2170:21;2158:34;;2401:3;2386:19;;2502:4;2494:6;2490:17;2484:24;2517:54;2565:4;2554:9;2550:20;2536:12;-1:-1:-1;;;;;1227:31:8;1215:44;;1161:104;2517:54;;2627:4;2619:6;2615:17;2609:24;2602:4;2591:9;2587:20;2580:54;2690:4;2682:6;2678:17;2672:24;2665:4;2654:9;2650:20;2643:54;2753:4;2745:6;2741:17;2735:24;2728:4;2717:9;2713:20;2706:54;2816:4;2808:6;2804:17;2798:24;2791:4;2780:9;2776:20;2769:54;2872:4;2864:6;2860:17;2854:24;2887:53;2934:4;2923:9;2919:20;2903:14;2177:13;2170:21;2158:34;;2107:91;2887:53;-1:-1:-1;2996:4:8;2984:17;;;2978:24;2956:20;;;2949:54;3022:6;3070:15;;;3064:22;3044:18;;;3037:50;3106:6;3149:15;;;3143:22;2177:13;2170:21;3206:18;;;;2158:34;;;;2203:1028;:::o;3236:254::-;3304:6;3312;3365:2;3353:9;3344:7;3340:23;3336:32;3333:52;;;3381:1;3378;3371:12;3333:52;3404:29;3423:9;3404:29;:::i;:::-;3394:39;3480:2;3465:18;;;;3452:32;;-1:-1:-1;;;3236:254:8:o;3862:356::-;4064:2;4046:21;;;4083:18;;;4076:30;4142:34;4137:2;4122:18;;4115:62;4209:2;4194:18;;3862:356::o;4223:184::-;4293:6;4346:2;4334:9;4325:7;4321:23;4317:32;4314:52;;;4362:1;4359;4352:12;4314:52;-1:-1:-1;4385:16:8;;4223:184;-1:-1:-1;4223:184:8:o;6262:127::-;6323:10;6318:3;6314:20;6311:1;6304:31;6354:4;6351:1;6344:15;6378:4;6375:1;6368:15;6394:128;6434:3;6465:1;6461:6;6458:1;6455:13;6452:39;;;6471:18;;:::i;:::-;-1:-1:-1;6507:9:8;;6394:128::o;8204:125::-;8244:4;8272:1;8269;8266:8;8263:34;;;8277:18;;:::i;:::-;-1:-1:-1;8314:9:8;;8204:125::o;9849:127::-;9910:10;9905:3;9901:20;9898:1;9891:31;9941:4;9938:1;9931:15;9965:4;9962:1;9955:15;10260:217;10300:1;10326;10316:132;;10370:10;10365:3;10361:20;10358:1;10351:31;10405:4;10402:1;10395:15;10433:4;10430:1;10423:15;10316:132;-1:-1:-1;10462:9:8;;10260:217::o;10482:168::-;10522:7;10588:1;10584;10580:6;10576:14;10573:1;10570:21;10565:1;10558:9;10551:17;10547:45;10544:71;;;10595:18;;:::i;:::-;-1:-1:-1;10635:9:8;;10482:168::o;10655:245::-;10722:6;10775:2;10763:9;10754:7;10750:23;10746:32;10743:52;;;10791:1;10788;10781:12;10743:52;10823:9;10817:16;10842:28;10864:5;10842:28;:::i;12081:258::-;12153:1;12163:113;12177:6;12174:1;12171:13;12163:113;;;12253:11;;;12247:18;12234:11;;;12227:39;12199:2;12192:10;12163:113;;;12294:6;12291:1;12288:13;12285:48;;;12329:1;12320:6;12315:3;12311:16;12304:27;12285:48;;12081:258;;;:::o;12344:274::-;12473:3;12511:6;12505:13;12527:53;12573:6;12568:3;12561:4;12553:6;12549:17;12527:53;:::i;:::-;12596:16;;;;;12344:274;-1:-1:-1;;12344:274:8:o;12623:383::-;12772:2;12761:9;12754:21;12735:4;12804:6;12798:13;12847:6;12842:2;12831:9;12827:18;12820:34;12863:66;12922:6;12917:2;12906:9;12902:18;12897:2;12889:6;12885:15;12863:66;:::i;:::-;12990:2;12969:15;-1:-1:-1;;12965:29:8;12950:45;;;;12997:2;12946:54;;12623:383;-1:-1:-1;;12623:383:8:o",
  "source": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.14;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n/**\n * @title RKVesting\n */\ncontract RKVesting is Ownable, ReentrancyGuard{\n    using SafeERC20 for IERC20;\n    struct VestingSchedule{\n        bool initialized;\n        // beneficiary of tokens after they are released\n        address  beneficiary;\n        // cliff period in seconds\n        uint256  cliff;\n        // start time of the vesting period\n        uint256  start;\n        // duration of the vesting period in seconds\n        uint256  duration;\n        // duration of a slice period for the vesting in seconds\n        uint256 slicePeriodSeconds;\n        // whether or not the vesting is revocable\n        bool  revocable;\n        // total amount of tokens to be released at the end of the vesting\n        uint256 amountTotal;\n        // amount of tokens released\n        uint256  released;\n        // whether or not the vesting has been revoked\n        bool revoked;\n    }\n\n    // address of the ERC20 token\n    IERC20 immutable private _token;\n\n    bytes32[] private vestingSchedulesIds;\n    mapping(bytes32 => VestingSchedule) private vestingSchedules;\n    uint256 private vestingSchedulesTotalAmount;\n    mapping(address => uint256) private holdersVestingCount;\n\n    event Released(uint256 amount);\n    event Revoked();\n\n    /**\n    * @dev Reverts if no vesting schedule matches the passed identifier.\n    */\n    modifier onlyIfVestingScheduleExists(bytes32 vestingScheduleId) {\n        require(vestingSchedules[vestingScheduleId].initialized == true);\n        _;\n    }\n\n    /**\n    * @dev Reverts if the vesting schedule does not exist or has been revoked.\n    */\n    modifier onlyIfVestingScheduleNotRevoked(bytes32 vestingScheduleId) {\n        require(vestingSchedules[vestingScheduleId].initialized == true);\n        require(vestingSchedules[vestingScheduleId].revoked == false);\n        _;\n    }\n\n    /**\n     * @dev Creates a vesting contract.\n     * @param token_ address of the ERC20 token contract\n     */\n    constructor(address token_) {\n        require(token_ != address(0x0));\n        _token = IERC20(token_);\n    }\n\n    receive() external payable {}\n\n    fallback() external payable {}\n\n    /**\n    * @dev Returns the number of vesting schedules associated to a beneficiary.\n    * @return the number of vesting schedules\n    */\n    function getVestingSchedulesCountByBeneficiary(address _beneficiary)\n    external\n    view\n    returns(uint256){\n        return holdersVestingCount[_beneficiary];\n    }\n\n    /**\n    * @dev Returns the vesting schedule id at the given index.\n    * @return the vesting id\n    */\n    function getVestingIdAtIndex(uint256 index)\n    external\n    view\n    returns(bytes32){\n        require(index < getVestingSchedulesCount(), \"TokenVesting: index out of bounds\");\n        return vestingSchedulesIds[index];\n    }\n\n    /**\n    * @notice Returns the vesting schedule information for a given holder and index.\n    * @return the vesting schedule structure information\n    */\n    function getVestingScheduleByAddressAndIndex(address holder, uint256 index)\n    external\n    view\n    returns(VestingSchedule memory){\n        return getVestingSchedule(computeVestingScheduleIdForAddressAndIndex(holder, index));\n    }\n\n\n    /**\n    * @notice Returns the total amount of vesting schedules.\n    * @return the total amount of vesting schedules\n    */\n    function getVestingSchedulesTotalAmount()\n    external\n    view\n    returns(uint256){\n        return vestingSchedulesTotalAmount;\n    }\n\n    /**\n    * @dev Returns the address of the ERC20 token managed by the vesting contract.\n    */\n    function getToken()\n    external\n    view\n    returns(address){\n        return address(_token);\n    }\n\n    /**\n    * @notice Creates a new vesting schedule for a beneficiary.\n    * @param _beneficiary address of the beneficiary to whom vested tokens are transferred\n    * @param _start start time of the vesting period\n    * @param _cliff duration in seconds of the cliff in which tokens will begin to vest\n    * @param _duration duration in seconds of the period in which the tokens will vest\n    * @param _slicePeriodSeconds duration of a slice period for the vesting in seconds\n    * @param _revocable whether the vesting is revocable or not\n    * @param _amount total amount of tokens to be released at the end of the vesting\n    */\n    function createVestingSchedule(\n        address _beneficiary,\n        uint256 _start,\n        uint256 _cliff,\n        uint256 _duration,\n        uint256 _slicePeriodSeconds,\n        bool _revocable,\n        uint256 _amount\n    )\n        public\n        onlyOwner{\n        require(\n            this.getWithdrawableAmount() >= _amount,\n            \"TokenVesting: cannot create vesting schedule because not sufficient tokens\"\n        );\n        require(_duration > 0, \"TokenVesting: duration must be > 0\");\n        require(_amount > 0, \"TokenVesting: amount must be > 0\");\n        require(_slicePeriodSeconds >= 1, \"TokenVesting: slicePeriodSeconds must be >= 1\");\n        bytes32 vestingScheduleId = this.computeNextVestingScheduleIdForHolder(_beneficiary);\n        uint256 cliff = _start + _cliff;\n        vestingSchedules[vestingScheduleId] = VestingSchedule(\n            true,\n            _beneficiary,\n            cliff,\n            _start,\n            _duration,\n            _slicePeriodSeconds,\n            _revocable,\n            _amount,\n            0,\n            false\n        );\n        vestingSchedulesTotalAmount = vestingSchedulesTotalAmount + _amount;\n        vestingSchedulesIds.push(vestingScheduleId);\n        uint256 currentVestingCount = holdersVestingCount[_beneficiary];\n        holdersVestingCount[_beneficiary] = currentVestingCount + 1;\n    }\n\n    /**\n    * @notice Revokes the vesting schedule for given identifier.\n    * @param vestingScheduleId the vesting schedule identifier\n    */\n    function revoke(bytes32 vestingScheduleId)\n        public\n        onlyOwner\n        onlyIfVestingScheduleNotRevoked(vestingScheduleId){\n        VestingSchedule storage vestingSchedule = vestingSchedules[vestingScheduleId];\n        require(vestingSchedule.revocable == true, \"TokenVesting: vesting is not revocable\");\n        uint256 vestedAmount = _computeReleasableAmount(vestingSchedule);\n        if(vestedAmount > 0){\n            release(vestingScheduleId, vestedAmount);\n        }\n        uint256 unreleased = vestingSchedule.amountTotal - vestingSchedule.released;\n        vestingSchedulesTotalAmount = vestingSchedulesTotalAmount - unreleased;\n        vestingSchedule.revoked = true;\n    }\n\n    /**\n    * @notice Withdraw the specified amount if possible.\n    * @param amount the amount to withdraw\n    */\n    function withdraw(uint256 amount)\n        public\n        onlyOwner{\n        require(this.getWithdrawableAmount() >= amount, \"TokenVesting: not enough withdrawable funds\");\n        _token.safeTransfer(owner(), amount);\n    }\n\n    /**\n    * @notice Release vested amount of tokens.\n    * @param vestingScheduleId the vesting schedule identifier\n    * @param amount the amount to release\n    */\n    function release(\n        bytes32 vestingScheduleId,\n        uint256 amount\n    )\n        public\n        nonReentrant\n        onlyIfVestingScheduleNotRevoked(vestingScheduleId){\n        VestingSchedule storage vestingSchedule = vestingSchedules[vestingScheduleId];\n        bool isBeneficiary = msg.sender == vestingSchedule.beneficiary;\n        bool isOwner = msg.sender == owner();\n        require(\n            isBeneficiary || isOwner,\n            \"TokenVesting: only beneficiary and owner can release vested tokens\"\n        );\n        uint256 vestedAmount = _computeReleasableAmount(vestingSchedule);\n        require(vestedAmount >= amount, \"TokenVesting: cannot release tokens, not enough vested tokens\");\n        vestingSchedule.released = vestingSchedule.released + amount;\n        address payable beneficiaryPayable = payable(vestingSchedule.beneficiary);\n        vestingSchedulesTotalAmount = vestingSchedulesTotalAmount - amount;\n        _token.safeTransfer(beneficiaryPayable, amount);\n    }\n\n    /**\n    * @dev Returns the number of vesting schedules managed by this contract.\n    * @return the number of vesting schedules\n    */\n    function getVestingSchedulesCount()\n        public\n        view\n        returns(uint256){\n        return vestingSchedulesIds.length;\n    }\n\n    /**\n    * @notice Computes the vested amount of tokens for the given vesting schedule identifier.\n    * @return the vested amount\n    */\n    function computeReleasableAmount(bytes32 vestingScheduleId)\n        public\n        onlyIfVestingScheduleNotRevoked(vestingScheduleId)\n        view\n        returns(uint256){\n        VestingSchedule storage vestingSchedule = vestingSchedules[vestingScheduleId];\n        return _computeReleasableAmount(vestingSchedule);\n    }\n\n    /**\n    * @notice Returns the vesting schedule information for a given identifier.\n    * @return the vesting schedule structure information\n    */\n    function getVestingSchedule(bytes32 vestingScheduleId)\n        public\n        view\n        returns(VestingSchedule memory){\n        return vestingSchedules[vestingScheduleId];\n    }\n\n    /**\n    * @dev Returns the amount of tokens that can be withdrawn by the owner.\n    * @return the amount of tokens\n    */\n    function getWithdrawableAmount()\n        public\n        view\n        returns(uint256){\n        return _token.balanceOf(address(this)) - vestingSchedulesTotalAmount;\n    }\n\n    /**\n    * @dev Computes the next vesting schedule identifier for a given holder address.\n    */\n    function computeNextVestingScheduleIdForHolder(address holder)\n        public\n        view\n        returns(bytes32){\n        return computeVestingScheduleIdForAddressAndIndex(holder, holdersVestingCount[holder]);\n    }\n\n    /**\n    * @dev Returns the last vesting schedule for a given holder address.\n    */\n    function getLastVestingScheduleForHolder(address holder)\n        public\n        view\n        returns(VestingSchedule memory){\n        return vestingSchedules[computeVestingScheduleIdForAddressAndIndex(holder, holdersVestingCount[holder] - 1)];\n    }\n\n    /**\n    * @dev Computes the vesting schedule identifier for an address and an index.\n    */\n    function computeVestingScheduleIdForAddressAndIndex(address holder, uint256 index)\n        public\n        pure\n        returns(bytes32){\n        return keccak256(abi.encodePacked(holder, index));\n    }\n\n    /**\n    * @dev Computes the releasable amount of tokens for a vesting schedule.\n    * @return the amount of releasable tokens\n    */\n    function _computeReleasableAmount(VestingSchedule memory vestingSchedule)\n    internal\n    view\n    returns(uint256){\n        uint256 currentTime = getCurrentTime();\n        if ((currentTime < vestingSchedule.cliff) || vestingSchedule.revoked == true) {\n            return 0;\n        } else if (currentTime >= vestingSchedule.start + vestingSchedule.duration) {\n            return vestingSchedule.amountTotal - vestingSchedule.released;\n        } else {\n            uint256 timeFromStart = currentTime - vestingSchedule.start;\n            uint secondsPerSlice = vestingSchedule.slicePeriodSeconds;\n            uint256 vestedSlicePeriods = timeFromStart/secondsPerSlice;\n            uint256 vestedSeconds = vestedSlicePeriods * secondsPerSlice;\n            uint256 vestedAmount = vestingSchedule.amountTotal * vestedSeconds/vestingSchedule.duration;\n            vestedAmount = vestedAmount - vestingSchedule.released;\n            return vestedAmount;\n        }\n    }\n\n    function getCurrentTime()\n        internal\n        virtual\n        view\n        returns(uint256){\n        return block.timestamp;\n    }\n\n}",
  "sourcePath": "/Users/user/Desktop/difx-rk/truffle/contracts/RKVesting.sol",
  "ast": {
    "absolutePath": "project:/contracts/RKVesting.sol",
    "exportedSymbols": {
      "Address": [
        741
      ],
      "Context": [
        763
      ],
      "IERC20": [
        222
      ],
      "Ownable": [
        104
      ],
      "RKVesting": [
        1468
      ],
      "ReentrancyGuard": [
        144
      ],
      "SafeERC20": [
        446
      ]
    },
    "id": 1469,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 765,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 766,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1469,
        "sourceUnit": 223,
        "src": "64:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 767,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1469,
        "sourceUnit": 447,
        "src": "121:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 768,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1469,
        "sourceUnit": 145,
        "src": "187:62:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 769,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1469,
        "sourceUnit": 105,
        "src": "250:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 771,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "353:7:6"
            },
            "id": 772,
            "nodeType": "InheritanceSpecifier",
            "src": "353:7:6"
          },
          {
            "baseName": {
              "id": 773,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "362:15:6"
            },
            "id": 774,
            "nodeType": "InheritanceSpecifier",
            "src": "362:15:6"
          }
        ],
        "canonicalName": "RKVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 770,
          "nodeType": "StructuredDocumentation",
          "src": "303:27:6",
          "text": " @title RKVesting"
        },
        "fullyImplemented": true,
        "id": 1468,
        "linearizedBaseContracts": [
          1468,
          144,
          104,
          763
        ],
        "name": "RKVesting",
        "nameLocation": "340:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 778,
            "libraryName": {
              "id": 775,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 446,
              "src": "389:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "383:27:6",
            "typeName": {
              "id": 777,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 776,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 222,
                "src": "403:6:6"
              },
              "referencedDeclaration": 222,
              "src": "403:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$222",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "RKVesting.VestingSchedule",
            "id": 799,
            "members": [
              {
                "constant": false,
                "id": 780,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "452:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "447:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 779,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "447:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 782,
                "mutability": "mutable",
                "name": "beneficiary",
                "nameLocation": "539:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "530:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 781,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "530:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 784,
                "mutability": "mutable",
                "name": "cliff",
                "nameLocation": "604:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "595:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 783,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "595:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 786,
                "mutability": "mutable",
                "name": "start",
                "nameLocation": "672:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "663:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 785,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 788,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "749:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "740:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 787,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 790,
                "mutability": "mutable",
                "name": "slicePeriodSeconds",
                "nameLocation": "840:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "832:26:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 789,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "832:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 792,
                "mutability": "mutable",
                "name": "revocable",
                "nameLocation": "925:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "919:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 791,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "919:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 794,
                "mutability": "mutable",
                "name": "amountTotal",
                "nameLocation": "1027:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1019:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 793,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1019:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 796,
                "mutability": "mutable",
                "name": "released",
                "nameLocation": "1094:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1085:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 795,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1085:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 798,
                "mutability": "mutable",
                "name": "revoked",
                "nameLocation": "1172:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1167:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 797,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1167:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VestingSchedule",
            "nameLocation": "422:15:6",
            "nodeType": "StructDefinition",
            "scope": 1468,
            "src": "415:771:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 802,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "1251:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1226:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$222",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 801,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 800,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 222,
                "src": "1226:6:6"
              },
              "referencedDeclaration": 222,
              "src": "1226:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$222",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 805,
            "mutability": "mutable",
            "name": "vestingSchedulesIds",
            "nameLocation": "1282:19:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1264:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 803,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1264:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 804,
              "nodeType": "ArrayTypeName",
              "src": "1264:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 810,
            "mutability": "mutable",
            "name": "vestingSchedules",
            "nameLocation": "1351:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1307:60:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
              "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule)"
            },
            "typeName": {
              "id": 809,
              "keyType": {
                "id": 806,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1315:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1307:35:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule)"
              },
              "valueType": {
                "id": 808,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 807,
                  "name": "VestingSchedule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "1326:15:6"
                },
                "referencedDeclaration": 799,
                "src": "1326:15:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                  "typeString": "struct RKVesting.VestingSchedule"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 812,
            "mutability": "mutable",
            "name": "vestingSchedulesTotalAmount",
            "nameLocation": "1389:27:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1373:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 811,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1373:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 816,
            "mutability": "mutable",
            "name": "holdersVestingCount",
            "nameLocation": "1458:19:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1422:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 815,
              "keyType": {
                "id": 813,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1430:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1422:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 814,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1441:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "fb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565",
            "id": 820,
            "name": "Released",
            "nameLocation": "1490:8:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1507:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "1499:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:16:6"
            },
            "src": "1484:31:6"
          },
          {
            "anonymous": false,
            "eventSelector": "44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6",
            "id": 822,
            "name": "Revoked",
            "nameLocation": "1526:7:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1533:2:6"
            },
            "src": "1520:16:6"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "1694:92:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 828,
                              "name": "vestingSchedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "1712:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                                "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                              }
                            },
                            "id": 830,
                            "indexExpression": {
                              "id": 829,
                              "name": "vestingScheduleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "1729:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1712:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                              "typeString": "struct RKVesting.VestingSchedule storage ref"
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "1712:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1763:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1712:55:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1704:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:64:6"
                },
                {
                  "id": 836,
                  "nodeType": "PlaceholderStatement",
                  "src": "1778:1:6"
                }
              ]
            },
            "documentation": {
              "id": 823,
              "nodeType": "StructuredDocumentation",
              "src": "1542:83:6",
              "text": " @dev Reverts if no vesting schedule matches the passed identifier."
            },
            "id": 838,
            "name": "onlyIfVestingScheduleExists",
            "nameLocation": "1639:27:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "1675:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "1667:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1666:27:6"
            },
            "src": "1630:156:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "1954:163:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 844,
                              "name": "vestingSchedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "1972:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                                "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                              }
                            },
                            "id": 846,
                            "indexExpression": {
                              "id": 845,
                              "name": "vestingScheduleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "1989:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1972:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                              "typeString": "struct RKVesting.VestingSchedule storage ref"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "1972:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2023:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1972:55:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1964:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1964:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:64:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 853,
                              "name": "vestingSchedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "2046:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                                "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                              }
                            },
                            "id": 855,
                            "indexExpression": {
                              "id": 854,
                              "name": "vestingScheduleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "2063:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2046:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                              "typeString": "struct RKVesting.VestingSchedule storage ref"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "revoked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 798,
                          "src": "2046:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2093:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2046:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2038:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:61:6"
                },
                {
                  "id": 861,
                  "nodeType": "PlaceholderStatement",
                  "src": "2109:1:6"
                }
              ]
            },
            "documentation": {
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "1792:89:6",
              "text": " @dev Reverts if the vesting schedule does not exist or has been revoked."
            },
            "id": 863,
            "name": "onlyIfVestingScheduleNotRevoked",
            "nameLocation": "1895:31:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "1935:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "1927:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1926:27:6"
            },
            "src": "1886:231:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "2264:81:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 870,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "2282:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2300:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2292:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 871,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2292:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2292:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2282:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2274:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 877,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:31:6"
                },
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 878,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "2315:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$222",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 880,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "2331:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 879,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2324:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2324:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$222",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2315:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$222",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:23:6"
                }
              ]
            },
            "documentation": {
              "id": 864,
              "nodeType": "StructuredDocumentation",
              "src": "2123:108:6",
              "text": " @dev Creates a vesting contract.\n @param token_ address of the ERC20 token contract"
            },
            "id": 885,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "2256:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "2248:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:16:6"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2264:0:6"
            },
            "scope": 1468,
            "src": "2236:109:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "2378:2:6",
              "statements": []
            },
            "id": 889,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2358:2:6"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2378:0:6"
            },
            "scope": 1468,
            "src": "2351:29:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 892,
              "nodeType": "Block",
              "src": "2414:2:6",
              "statements": []
            },
            "id": 893,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2394:2:6"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2414:0:6"
            },
            "scope": 1468,
            "src": "2386:30:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 905,
              "nodeType": "Block",
              "src": "2674:57:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 901,
                      "name": "holdersVestingCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "2691:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 903,
                    "indexExpression": {
                      "id": 902,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "2711:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2691:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 900,
                  "id": 904,
                  "nodeType": "Return",
                  "src": "2684:40:6"
                }
              ]
            },
            "documentation": {
              "id": 894,
              "nodeType": "StructuredDocumentation",
              "src": "2422:136:6",
              "text": " @dev Returns the number of vesting schedules associated to a beneficiary.\n @return the number of vesting schedules"
            },
            "functionSelector": "5a7bb69a",
            "id": 906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingSchedulesCountByBeneficiary",
            "nameLocation": "2572:37:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "2618:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "2610:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2610:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2609:22:6"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "2666:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2665:9:6"
            },
            "scope": 1468,
            "src": "2563:168:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "2930:140:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 915,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 909,
                          "src": "2948:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 916,
                            "name": "getVestingSchedulesCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "2956:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2956:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2948:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e6473",
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2984:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abd18f3555caa4563ffa0f63bfdb073588de08ae6c678a44745ae051c21c5cf4",
                          "typeString": "literal_string \"TokenVesting: index out of bounds\""
                        },
                        "value": "TokenVesting: index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abd18f3555caa4563ffa0f63bfdb073588de08ae6c678a44745ae051c21c5cf4",
                          "typeString": "literal_string \"TokenVesting: index out of bounds\""
                        }
                      ],
                      "id": 914,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2940:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:80:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:80:6"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 922,
                      "name": "vestingSchedulesIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "3037:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "id": 924,
                    "indexExpression": {
                      "id": 923,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "3057:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3037:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 913,
                  "id": 925,
                  "nodeType": "Return",
                  "src": "3030:33:6"
                }
              ]
            },
            "documentation": {
              "id": 907,
              "nodeType": "StructuredDocumentation",
              "src": "2737:102:6",
              "text": " @dev Returns the vesting schedule id at the given index.\n @return the vesting id"
            },
            "functionSelector": "f9079b37",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingIdAtIndex",
            "nameLocation": "2853:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2881:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "2873:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2872:15:6"
            },
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "2922:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2921:9:6"
            },
            "scope": 1468,
            "src": "2844:226:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 945,
              "nodeType": "Block",
              "src": "3366:101:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 940,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "3445:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 941,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "3453:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 939,
                          "name": "computeVestingScheduleIdForAddressAndIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "3402:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (address,uint256) pure returns (bytes32)"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3402:57:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 938,
                      "name": "getVestingSchedule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1297,
                      "src": "3383:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_VestingSchedule_$799_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct RKVesting.VestingSchedule memory)"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3383:77:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                      "typeString": "struct RKVesting.VestingSchedule memory"
                    }
                  },
                  "functionReturnParameters": 937,
                  "id": 944,
                  "nodeType": "Return",
                  "src": "3376:84:6"
                }
              ]
            },
            "documentation": {
              "id": 928,
              "nodeType": "StructuredDocumentation",
              "src": "3076:152:6",
              "text": " @notice Returns the vesting schedule information for a given holder and index.\n @return the vesting schedule structure information"
            },
            "functionSelector": "f51321d7",
            "id": 946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingScheduleByAddressAndIndex",
            "nameLocation": "3242:35:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "3286:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "3278:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3302:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "3294:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3277:31:6"
            },
            "returnParameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "3343:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                    "typeString": "struct RKVesting.VestingSchedule"
                  },
                  "typeName": {
                    "id": 935,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 934,
                      "name": "VestingSchedule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 799,
                      "src": "3343:15:6"
                    },
                    "referencedDeclaration": 799,
                    "src": "3343:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                      "typeString": "struct RKVesting.VestingSchedule"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3342:24:6"
            },
            "scope": 1468,
            "src": "3233:234:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "3686:51:6",
              "statements": [
                {
                  "expression": {
                    "id": 952,
                    "name": "vestingSchedulesTotalAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 812,
                    "src": "3703:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 951,
                  "id": 953,
                  "nodeType": "Return",
                  "src": "3696:34:6"
                }
              ]
            },
            "documentation": {
              "id": 947,
              "nodeType": "StructuredDocumentation",
              "src": "3474:123:6",
              "text": " @notice Returns the total amount of vesting schedules.\n @return the total amount of vesting schedules"
            },
            "functionSelector": "48deb471",
            "id": 955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingSchedulesTotalAmount",
            "nameLocation": "3611:30:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3641:2:6"
            },
            "returnParameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 950,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "3678:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3677:9:6"
            },
            "scope": 1468,
            "src": "3602:135:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "3903:39:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 963,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "3928:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3920:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 961,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3920:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3920:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 960,
                  "id": 965,
                  "nodeType": "Return",
                  "src": "3913:22:6"
                }
              ]
            },
            "documentation": {
              "id": 956,
              "nodeType": "StructuredDocumentation",
              "src": "3743:93:6",
              "text": " @dev Returns the address of the ERC20 token managed by the vesting contract."
            },
            "functionSelector": "21df0da7",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "3850:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3858:2:6"
            },
            "returnParameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "3895:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3894:9:6"
            },
            "scope": 1468,
            "src": "3841:101:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "4843:1103:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 988,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4874:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RKVesting_$1468",
                                "typeString": "contract RKVesting"
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getWithdrawableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1314,
                            "src": "4874:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4874:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 991,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 982,
                          "src": "4906:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4874:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2063616e6e6f74206372656174652076657374696e67207363686564756c652062656361757365206e6f742073756666696369656e7420746f6b656e73",
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4927:76:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2eac501d5068c970a209489eb1d1ae38aa7e39d93aa968139e8303982c5b39d",
                          "typeString": "literal_string \"TokenVesting: cannot create vesting schedule because not sufficient tokens\""
                        },
                        "value": "TokenVesting: cannot create vesting schedule because not sufficient tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2eac501d5068c970a209489eb1d1ae38aa7e39d93aa968139e8303982c5b39d",
                          "typeString": "literal_string \"TokenVesting: cannot create vesting schedule because not sufficient tokens\""
                        }
                      ],
                      "id": 987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4853:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4853:160:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "4853:160:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 997,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "5031:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5043:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5031:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206475726174696f6e206d757374206265203e2030",
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5046:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aef052e3b5fc0eb29cdf76f24ed1e0239550c0a7a9e6afe7257b226df64ceb86",
                          "typeString": "literal_string \"TokenVesting: duration must be > 0\""
                        },
                        "value": "TokenVesting: duration must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aef052e3b5fc0eb29cdf76f24ed1e0239550c0a7a9e6afe7257b226df64ceb86",
                          "typeString": "literal_string \"TokenVesting: duration must be > 0\""
                        }
                      ],
                      "id": 996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5023:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5023:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1002,
                  "nodeType": "ExpressionStatement",
                  "src": "5023:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1004,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 982,
                          "src": "5101:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5111:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5101:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20616d6f756e74206d757374206265203e2030",
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5114:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596",
                          "typeString": "literal_string \"TokenVesting: amount must be > 0\""
                        },
                        "value": "TokenVesting: amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596",
                          "typeString": "literal_string \"TokenVesting: amount must be > 0\""
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5093:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5093:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1009,
                  "nodeType": "ExpressionStatement",
                  "src": "5093:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1011,
                          "name": "_slicePeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5167:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5190:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5167:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20736c696365506572696f645365636f6e6473206d757374206265203e3d2031",
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5193:47:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a09ee7f895363f516ca65be926093c2b80d1ec647ac6f8bc2bc1e112800d5cd",
                          "typeString": "literal_string \"TokenVesting: slicePeriodSeconds must be >= 1\""
                        },
                        "value": "TokenVesting: slicePeriodSeconds must be >= 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a09ee7f895363f516ca65be926093c2b80d1ec647ac6f8bc2bc1e112800d5cd",
                          "typeString": "literal_string \"TokenVesting: slicePeriodSeconds must be >= 1\""
                        }
                      ],
                      "id": 1010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5159:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5159:82:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "5159:82:6"
                },
                {
                  "assignments": [
                    1018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1018,
                      "mutability": "mutable",
                      "name": "vestingScheduleId",
                      "nameLocation": "5259:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "5251:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1017,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5251:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1023,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1021,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "5322:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1019,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "5279:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RKVesting_$1468",
                          "typeString": "contract RKVesting"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "computeNextVestingScheduleIdForHolder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "5279:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (address) view external returns (bytes32)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5251:84:6"
                },
                {
                  "assignments": [
                    1025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1025,
                      "mutability": "mutable",
                      "name": "cliff",
                      "nameLocation": "5353:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "5345:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1024,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5345:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1029,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1026,
                      "name": "_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "5361:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1027,
                      "name": "_cliff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "5370:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5361:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5345:31:6"
                },
                {
                  "expression": {
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1030,
                        "name": "vestingSchedules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "5386:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                          "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                        }
                      },
                      "id": 1032,
                      "indexExpression": {
                        "id": 1031,
                        "name": "vestingScheduleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "5403:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5386:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                        "typeString": "struct RKVesting.VestingSchedule storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5453:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 1035,
                          "name": "_beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "5471:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1036,
                          "name": "cliff",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "5497:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1037,
                          "name": "_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "5516:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1038,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "5536:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1039,
                          "name": "_slicePeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5559:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1040,
                          "name": "_revocable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "5592:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 1041,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 982,
                          "src": "5616:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5637:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5652:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1033,
                        "name": "VestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 799,
                        "src": "5424:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_VestingSchedule_$799_storage_ptr_$",
                          "typeString": "type(struct RKVesting.VestingSchedule storage pointer)"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5424:243:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                        "typeString": "struct RKVesting.VestingSchedule memory"
                      }
                    },
                    "src": "5386:281:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "5386:281:6"
                },
                {
                  "expression": {
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1047,
                      "name": "vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "5677:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1048,
                        "name": "vestingSchedulesTotalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "5707:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1049,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "5737:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5707:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5677:67:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "5677:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1056,
                        "name": "vestingScheduleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "5779:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1053,
                        "name": "vestingSchedulesIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "5754:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5754:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5754:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "5754:43:6"
                },
                {
                  "assignments": [
                    1060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1060,
                      "mutability": "mutable",
                      "name": "currentVestingCount",
                      "nameLocation": "5815:19:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "5807:27:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1059,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5807:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1064,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1061,
                      "name": "holdersVestingCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "5837:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1063,
                    "indexExpression": {
                      "id": 1062,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "5857:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5837:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5807:63:6"
                },
                {
                  "expression": {
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1065,
                        "name": "holdersVestingCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "5880:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1067,
                      "indexExpression": {
                        "id": 1066,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "5900:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5880:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1068,
                        "name": "currentVestingCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "5916:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5938:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5916:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5880:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "5880:59:6"
                }
              ]
            },
            "documentation": {
              "id": 968,
              "nodeType": "StructuredDocumentation",
              "src": "3948:629:6",
              "text": " @notice Creates a new vesting schedule for a beneficiary.\n @param _beneficiary address of the beneficiary to whom vested tokens are transferred\n @param _start start time of the vesting period\n @param _cliff duration in seconds of the cliff in which tokens will begin to vest\n @param _duration duration in seconds of the period in which the tokens will vest\n @param _slicePeriodSeconds duration of a slice period for the vesting in seconds\n @param _revocable whether the vesting is revocable or not\n @param _amount total amount of tokens to be released at the end of the vesting"
            },
            "functionSelector": "17e289e9",
            "id": 1074,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 984,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "4834:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4834:9:6"
              }
            ],
            "name": "createVestingSchedule",
            "nameLocation": "4591:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "4630:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4622:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4622:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "_start",
                  "nameLocation": "4660:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4652:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4652:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "_cliff",
                  "nameLocation": "4684:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4676:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "4708:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4700:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "_slicePeriodSeconds",
                  "nameLocation": "4735:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4727:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4727:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "_revocable",
                  "nameLocation": "4769:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4764:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4764:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4797:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4789:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4789:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4612:198:6"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4843:0:6"
            },
            "scope": 1468,
            "src": "4582:1364:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "6229:561:6",
              "statements": [
                {
                  "assignments": [
                    1087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1087,
                      "mutability": "mutable",
                      "name": "vestingSchedule",
                      "nameLocation": "6263:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "6239:39:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                        "typeString": "struct RKVesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 1086,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1085,
                          "name": "VestingSchedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "6239:15:6"
                        },
                        "referencedDeclaration": 799,
                        "src": "6239:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1091,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1088,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "6281:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1090,
                    "indexExpression": {
                      "id": 1089,
                      "name": "vestingScheduleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "6298:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6281:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6239:77:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1093,
                            "name": "vestingSchedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1087,
                            "src": "6334:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                              "typeString": "struct RKVesting.VestingSchedule storage pointer"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "revocable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 792,
                          "src": "6334:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6363:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6334:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2076657374696e67206973206e6f74207265766f6361626c65",
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6369:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582d8774ffe94a897813710ca5f4ba3e235ee83fc30565f07b97cb0c05bc94f7",
                          "typeString": "literal_string \"TokenVesting: vesting is not revocable\""
                        },
                        "value": "TokenVesting: vesting is not revocable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_582d8774ffe94a897813710ca5f4ba3e235ee83fc30565f07b97cb0c05bc94f7",
                          "typeString": "literal_string \"TokenVesting: vesting is not revocable\""
                        }
                      ],
                      "id": 1092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6326:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6326:84:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "6326:84:6"
                },
                {
                  "assignments": [
                    1101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1101,
                      "mutability": "mutable",
                      "name": "vestedAmount",
                      "nameLocation": "6428:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "6420:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1100,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6420:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1105,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1103,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "6468:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      ],
                      "id": 1102,
                      "name": "_computeReleasableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "6443:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$799_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct RKVesting.VestingSchedule memory) view returns (uint256)"
                      }
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6443:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6420:64:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1106,
                      "name": "vestedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1101,
                      "src": "6497:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6512:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6497:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1115,
                  "nodeType": "IfStatement",
                  "src": "6494:85:6",
                  "trueBody": {
                    "id": 1114,
                    "nodeType": "Block",
                    "src": "6514:65:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1110,
                              "name": "vestingScheduleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "6536:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1111,
                              "name": "vestedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1101,
                              "src": "6555:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1109,
                            "name": "release",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "6528:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6528:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1113,
                        "nodeType": "ExpressionStatement",
                        "src": "6528:40:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1117,
                      "mutability": "mutable",
                      "name": "unreleased",
                      "nameLocation": "6596:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "6588:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1116,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6588:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1123,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1118,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "6609:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountTotal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 794,
                      "src": "6609:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 1120,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "6639:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "released",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 796,
                      "src": "6639:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6609:54:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6588:75:6"
                },
                {
                  "expression": {
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1124,
                      "name": "vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "6673:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1125,
                        "name": "vestingSchedulesTotalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "6703:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1126,
                        "name": "unreleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "6733:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6703:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6673:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "6673:70:6"
                },
                {
                  "expression": {
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1130,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "6753:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "revoked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 798,
                      "src": "6753:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6779:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6753:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "6753:30:6"
                }
              ]
            },
            "documentation": {
              "id": 1075,
              "nodeType": "StructuredDocumentation",
              "src": "5952:138:6",
              "text": " @notice Revokes the vesting schedule for given identifier.\n @param vestingScheduleId the vesting schedule identifier"
            },
            "functionSelector": "b75c7dc6",
            "id": 1137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1079,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6161:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6161:9:6"
              },
              {
                "arguments": [
                  {
                    "id": 1082,
                    "name": "vestingScheduleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1077,
                    "src": "6211:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1083,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1081,
                  "name": "onlyIfVestingScheduleNotRevoked",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 863,
                  "src": "6179:31:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6179:50:6"
              }
            ],
            "name": "revoke",
            "nameLocation": "6104:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "6119:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "6111:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6111:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6110:27:6"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6229:0:6"
            },
            "scope": 1468,
            "src": "6095:695:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1162,
              "nodeType": "Block",
              "src": "6977:157:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1146,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "6995:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RKVesting_$1468",
                                "typeString": "contract RKVesting"
                              }
                            },
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getWithdrawableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1314,
                            "src": "6995:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6995:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1149,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "7027:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6995:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206e6f7420656e6f75676820776974686472617761626c652066756e6473",
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7035:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3208b577e75abf50e25ea56b6fb6f95b34754fbb6b3a3f83a4c87e183c8b693",
                          "typeString": "literal_string \"TokenVesting: not enough withdrawable funds\""
                        },
                        "value": "TokenVesting: not enough withdrawable funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3208b577e75abf50e25ea56b6fb6f95b34754fbb6b3a3f83a4c87e183c8b693",
                          "typeString": "literal_string \"TokenVesting: not enough withdrawable funds\""
                        }
                      ],
                      "id": 1145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6987:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6987:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "6987:94:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1157,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "7111:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7111:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1159,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "7120:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1154,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "7091:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "7091:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7091:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "7091:36:6"
                }
              ]
            },
            "documentation": {
              "id": 1138,
              "nodeType": "StructuredDocumentation",
              "src": "6796:110:6",
              "text": " @notice Withdraw the specified amount if possible.\n @param amount the amount to withdraw"
            },
            "functionSelector": "2e1a7d4d",
            "id": 1163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1143,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1142,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6968:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6968:9:6"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6920:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6937:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "6929:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6929:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6928:16:6"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6977:0:6"
            },
            "scope": 1468,
            "src": "6911:223:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1249,
              "nodeType": "Block",
              "src": "7483:825:6",
              "statements": [
                {
                  "assignments": [
                    1178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1178,
                      "mutability": "mutable",
                      "name": "vestingSchedule",
                      "nameLocation": "7517:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "7493:39:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                        "typeString": "struct RKVesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 1177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1176,
                          "name": "VestingSchedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "7493:15:6"
                        },
                        "referencedDeclaration": 799,
                        "src": "7493:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1182,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1179,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "7535:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1181,
                    "indexExpression": {
                      "id": 1180,
                      "name": "vestingScheduleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1166,
                      "src": "7552:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7535:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7493:77:6"
                },
                {
                  "assignments": [
                    1184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "isBeneficiary",
                      "nameLocation": "7585:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "7580:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7580:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1190,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1185,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7601:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7601:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1187,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "7615:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 782,
                      "src": "7615:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7601:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7580:62:6"
                },
                {
                  "assignments": [
                    1192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1192,
                      "mutability": "mutable",
                      "name": "isOwner",
                      "nameLocation": "7657:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "7652:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1191,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7652:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1198,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1193,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7667:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7667:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1195,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "7681:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7681:7:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7667:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7652:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1200,
                          "name": "isBeneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "7719:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 1201,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1192,
                          "src": "7736:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7719:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206f6e6c792062656e656669636961727920616e64206f776e65722063616e2072656c656173652076657374656420746f6b656e73",
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:68:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd611d281859d9ca31d28e68329b9c1d51f5452ce3844d60d556eda1e2459a76",
                          "typeString": "literal_string \"TokenVesting: only beneficiary and owner can release vested tokens\""
                        },
                        "value": "TokenVesting: only beneficiary and owner can release vested tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd611d281859d9ca31d28e68329b9c1d51f5452ce3844d60d556eda1e2459a76",
                          "typeString": "literal_string \"TokenVesting: only beneficiary and owner can release vested tokens\""
                        }
                      ],
                      "id": 1199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7698:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7698:137:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "7698:137:6"
                },
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "vestedAmount",
                      "nameLocation": "7853:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "7845:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7845:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1209,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "7893:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      ],
                      "id": 1208,
                      "name": "_computeReleasableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "7868:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$799_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct RKVesting.VestingSchedule memory) view returns (uint256)"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7868:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7845:64:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1213,
                          "name": "vestedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1207,
                          "src": "7927:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1214,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "7943:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7927:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b656e732c206e6f7420656e6f7567682076657374656420746f6b656e73",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7951:63:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51be555965f95e85e66dc8a38c407d35ee8ab28ac3bdb4e2ae0f84a440da9617",
                          "typeString": "literal_string \"TokenVesting: cannot release tokens, not enough vested tokens\""
                        },
                        "value": "TokenVesting: cannot release tokens, not enough vested tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51be555965f95e85e66dc8a38c407d35ee8ab28ac3bdb4e2ae0f84a440da9617",
                          "typeString": "literal_string \"TokenVesting: cannot release tokens, not enough vested tokens\""
                        }
                      ],
                      "id": 1212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7919:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7919:96:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "7919:96:6"
                },
                {
                  "expression": {
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1219,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "8025:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "released",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 796,
                      "src": "8025:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1222,
                          "name": "vestingSchedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1178,
                          "src": "8052:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                            "typeString": "struct RKVesting.VestingSchedule storage pointer"
                          }
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "released",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 796,
                        "src": "8052:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1224,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "8079:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8052:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8025:60:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "8025:60:6"
                },
                {
                  "assignments": [
                    1229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1229,
                      "mutability": "mutable",
                      "name": "beneficiaryPayable",
                      "nameLocation": "8111:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "8095:34:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8095:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1235,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1232,
                          "name": "vestingSchedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1178,
                          "src": "8140:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                            "typeString": "struct RKVesting.VestingSchedule storage pointer"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "beneficiary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "8140:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8132:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8132:8:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8132:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8095:73:6"
                },
                {
                  "expression": {
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1236,
                      "name": "vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "8178:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1237,
                        "name": "vestingSchedulesTotalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "8208:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1238,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "8238:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8208:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8178:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "8178:66:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1245,
                        "name": "beneficiaryPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "8274:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1246,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "8294:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1242,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "8254:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "8254:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8254:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "8254:47:6"
                }
              ]
            },
            "documentation": {
              "id": 1164,
              "nodeType": "StructuredDocumentation",
              "src": "7140:162:6",
              "text": " @notice Release vested amount of tokens.\n @param vestingScheduleId the vesting schedule identifier\n @param amount the amount to release"
            },
            "functionSelector": "66afd8ef",
            "id": 1250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1170,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "7412:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7412:12:6"
              },
              {
                "arguments": [
                  {
                    "id": 1173,
                    "name": "vestingScheduleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1166,
                    "src": "7465:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1172,
                  "name": "onlyIfVestingScheduleNotRevoked",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 863,
                  "src": "7433:31:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7433:50:6"
              }
            ],
            "name": "release",
            "nameLocation": "7316:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "7341:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "7333:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7333:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7376:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "7368:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7368:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7323:65:6"
            },
            "returnParameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7483:0:6"
            },
            "scope": 1468,
            "src": "7307:1001:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1259,
              "nodeType": "Block",
              "src": "8540:50:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1256,
                      "name": "vestingSchedulesIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "8557:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8557:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1255,
                  "id": 1258,
                  "nodeType": "Return",
                  "src": "8550:33:6"
                }
              ]
            },
            "documentation": {
              "id": 1251,
              "nodeType": "StructuredDocumentation",
              "src": "8314:133:6",
              "text": " @dev Returns the number of vesting schedules managed by this contract.\n @return the number of vesting schedules"
            },
            "functionSelector": "13083617",
            "id": 1260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingSchedulesCount",
            "nameLocation": "8461:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8485:2:6"
            },
            "returnParameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1260,
                  "src": "8532:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8532:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8531:9:6"
            },
            "scope": 1468,
            "src": "8452:138:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "8908:152:6",
              "statements": [
                {
                  "assignments": [
                    1273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1273,
                      "mutability": "mutable",
                      "name": "vestingSchedule",
                      "nameLocation": "8942:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "8918:39:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                        "typeString": "struct RKVesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 1272,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1271,
                          "name": "VestingSchedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "8918:15:6"
                        },
                        "referencedDeclaration": 799,
                        "src": "8918:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1277,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1274,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "8960:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1276,
                    "indexExpression": {
                      "id": 1275,
                      "name": "vestingScheduleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "8977:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8960:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8918:77:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1279,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "9037:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      ],
                      "id": 1278,
                      "name": "_computeReleasableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "9012:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$799_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct RKVesting.VestingSchedule memory) view returns (uint256)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9012:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1270,
                  "id": 1281,
                  "nodeType": "Return",
                  "src": "9005:48:6"
                }
              ]
            },
            "documentation": {
              "id": 1261,
              "nodeType": "StructuredDocumentation",
              "src": "8596:136:6",
              "text": " @notice Computes the vested amount of tokens for the given vesting schedule identifier.\n @return the vested amount"
            },
            "functionSelector": "ea1bb3d5",
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1266,
                    "name": "vestingScheduleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1263,
                    "src": "8852:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1267,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1265,
                  "name": "onlyIfVestingScheduleNotRevoked",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 863,
                  "src": "8820:31:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8820:50:6"
              }
            ],
            "name": "computeReleasableAmount",
            "nameLocation": "8746:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "8778:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "8770:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8770:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8769:27:6"
            },
            "returnParameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "8900:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8900:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8899:9:6"
            },
            "scope": 1468,
            "src": "8737:323:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1296,
              "nodeType": "Block",
              "src": "9339:59:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1292,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "9356:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1294,
                    "indexExpression": {
                      "id": 1293,
                      "name": "vestingScheduleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "9373:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9356:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "functionReturnParameters": 1291,
                  "id": 1295,
                  "nodeType": "Return",
                  "src": "9349:42:6"
                }
              ]
            },
            "documentation": {
              "id": 1284,
              "nodeType": "StructuredDocumentation",
              "src": "9066:146:6",
              "text": " @notice Returns the vesting schedule information for a given identifier.\n @return the vesting schedule structure information"
            },
            "functionSelector": "9ef346b4",
            "id": 1297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingSchedule",
            "nameLocation": "9226:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "9253:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "9245:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9245:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9244:27:6"
            },
            "returnParameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "9316:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                    "typeString": "struct RKVesting.VestingSchedule"
                  },
                  "typeName": {
                    "id": 1289,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1288,
                      "name": "VestingSchedule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 799,
                      "src": "9316:15:6"
                    },
                    "referencedDeclaration": 799,
                    "src": "9316:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                      "typeString": "struct RKVesting.VestingSchedule"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9315:24:6"
            },
            "scope": 1468,
            "src": "9217:181:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1313,
              "nodeType": "Block",
              "src": "9615:85:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1307,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "9657:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RKVesting_$1468",
                                "typeString": "contract RKVesting"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RKVesting_$1468",
                                "typeString": "contract RKVesting"
                              }
                            ],
                            "id": 1306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9649:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1305,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9649:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9649:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1303,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "9632:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$222",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 179,
                        "src": "9632:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9632:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1310,
                      "name": "vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "9666:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9632:61:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1302,
                  "id": 1312,
                  "nodeType": "Return",
                  "src": "9625:68:6"
                }
              ]
            },
            "documentation": {
              "id": 1298,
              "nodeType": "StructuredDocumentation",
              "src": "9404:121:6",
              "text": " @dev Returns the amount of tokens that can be withdrawn by the owner.\n @return the amount of tokens"
            },
            "functionSelector": "90be10cc",
            "id": 1314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawableAmount",
            "nameLocation": "9539:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9560:2:6"
            },
            "returnParameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "9607:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9607:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9606:9:6"
            },
            "scope": 1468,
            "src": "9530:170:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1329,
              "nodeType": "Block",
              "src": "9921:103:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1323,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "9981:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1324,
                          "name": "holdersVestingCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 816,
                          "src": "9989:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1326,
                        "indexExpression": {
                          "id": 1325,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1317,
                          "src": "10009:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9989:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1322,
                      "name": "computeVestingScheduleIdForAddressAndIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "9938:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9938:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1321,
                  "id": 1328,
                  "nodeType": "Return",
                  "src": "9931:86:6"
                }
              ]
            },
            "documentation": {
              "id": 1315,
              "nodeType": "StructuredDocumentation",
              "src": "9706:95:6",
              "text": " @dev Computes the next vesting schedule identifier for a given holder address."
            },
            "functionSelector": "f7c469f0",
            "id": 1330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeNextVestingScheduleIdForHolder",
            "nameLocation": "9815:37:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "9861:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "9853:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9853:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9852:16:6"
            },
            "returnParameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "9913:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9913:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9912:9:6"
            },
            "scope": 1468,
            "src": "9806:218:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1350,
              "nodeType": "Block",
              "src": "10242:125:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1339,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "10259:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1348,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1341,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1333,
                          "src": "10319:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1342,
                              "name": "holdersVestingCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 816,
                              "src": "10327:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1344,
                            "indexExpression": {
                              "id": 1343,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1333,
                              "src": "10347:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10327:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10357:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "10327:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1340,
                        "name": "computeVestingScheduleIdForAddressAndIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "10276:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (address,uint256) pure returns (bytes32)"
                        }
                      },
                      "id": 1347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10276:83:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10259:101:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "functionReturnParameters": 1338,
                  "id": 1349,
                  "nodeType": "Return",
                  "src": "10252:108:6"
                }
              ]
            },
            "documentation": {
              "id": 1331,
              "nodeType": "StructuredDocumentation",
              "src": "10030:83:6",
              "text": " @dev Returns the last vesting schedule for a given holder address."
            },
            "functionSelector": "7e913dc6",
            "id": 1351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastVestingScheduleForHolder",
            "nameLocation": "10127:31:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "10167:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1351,
                  "src": "10159:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10159:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10158:16:6"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1351,
                  "src": "10219:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                    "typeString": "struct RKVesting.VestingSchedule"
                  },
                  "typeName": {
                    "id": 1336,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1335,
                      "name": "VestingSchedule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 799,
                      "src": "10219:15:6"
                    },
                    "referencedDeclaration": 799,
                    "src": "10219:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                      "typeString": "struct RKVesting.VestingSchedule"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10218:24:6"
            },
            "scope": 1468,
            "src": "10118:249:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1369,
              "nodeType": "Block",
              "src": "10604:66:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1364,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "10648:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1365,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "10656:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1362,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "10631:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10631:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10631:31:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1361,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "10621:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10621:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1360,
                  "id": 1368,
                  "nodeType": "Return",
                  "src": "10614:49:6"
                }
              ]
            },
            "documentation": {
              "id": 1352,
              "nodeType": "StructuredDocumentation",
              "src": "10373:91:6",
              "text": " @dev Computes the vesting schedule identifier for an address and an index."
            },
            "functionSelector": "8af104da",
            "id": 1370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeVestingScheduleIdForAddressAndIndex",
            "nameLocation": "10478:42:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1354,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "10529:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "10521:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10521:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1356,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "10545:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "10537:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10537:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10520:31:6"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "10596:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10596:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10595:9:6"
            },
            "scope": 1468,
            "src": "10469:201:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1457,
              "nodeType": "Block",
              "src": "10929:849:6",
              "statements": [
                {
                  "assignments": [
                    1380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1380,
                      "mutability": "mutable",
                      "name": "currentTime",
                      "nameLocation": "10947:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1457,
                      "src": "10939:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10939:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1383,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1381,
                      "name": "getCurrentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10961:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10961:16:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10939:38:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1384,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "10992:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1385,
                              "name": "vestingSchedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "11006:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                "typeString": "struct RKVesting.VestingSchedule memory"
                              }
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cliff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "11006:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10992:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1388,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10991:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1389,
                          "name": "vestingSchedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "11032:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                            "typeString": "struct RKVesting.VestingSchedule memory"
                          }
                        },
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "revoked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 798,
                        "src": "11032:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11059:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "11032:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10991:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1397,
                        "name": "currentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1380,
                        "src": "11108:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1398,
                            "name": "vestingSchedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "11123:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                              "typeString": "struct RKVesting.VestingSchedule memory"
                            }
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 786,
                          "src": "11123:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1400,
                            "name": "vestingSchedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "11147:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                              "typeString": "struct RKVesting.VestingSchedule memory"
                            }
                          },
                          "id": 1401,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 788,
                          "src": "11147:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11123:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11108:63:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1454,
                      "nodeType": "Block",
                      "src": "11265:507:6",
                      "statements": [
                        {
                          "assignments": [
                            1412
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1412,
                              "mutability": "mutable",
                              "name": "timeFromStart",
                              "nameLocation": "11287:13:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11279:21:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1411,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11279:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1417,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1413,
                              "name": "currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1380,
                              "src": "11303:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 1414,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "11317:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                  "typeString": "struct RKVesting.VestingSchedule memory"
                                }
                              },
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "start",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 786,
                              "src": "11317:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11303:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11279:59:6"
                        },
                        {
                          "assignments": [
                            1419
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1419,
                              "mutability": "mutable",
                              "name": "secondsPerSlice",
                              "nameLocation": "11357:15:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11352:20:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1418,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "11352:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1422,
                          "initialValue": {
                            "expression": {
                              "id": 1420,
                              "name": "vestingSchedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "11375:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                "typeString": "struct RKVesting.VestingSchedule memory"
                              }
                            },
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "slicePeriodSeconds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 790,
                            "src": "11375:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11352:57:6"
                        },
                        {
                          "assignments": [
                            1424
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1424,
                              "mutability": "mutable",
                              "name": "vestedSlicePeriods",
                              "nameLocation": "11431:18:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11423:26:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1423,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11423:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1428,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1425,
                              "name": "timeFromStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "11452:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1426,
                              "name": "secondsPerSlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1419,
                              "src": "11466:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11452:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11423:58:6"
                        },
                        {
                          "assignments": [
                            1430
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1430,
                              "mutability": "mutable",
                              "name": "vestedSeconds",
                              "nameLocation": "11503:13:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11495:21:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1429,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11495:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1434,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1431,
                              "name": "vestedSlicePeriods",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1424,
                              "src": "11519:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1432,
                              "name": "secondsPerSlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1419,
                              "src": "11540:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11519:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11495:60:6"
                        },
                        {
                          "assignments": [
                            1436
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1436,
                              "mutability": "mutable",
                              "name": "vestedAmount",
                              "nameLocation": "11577:12:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11569:20:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1435,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11569:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1444,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1437,
                                  "name": "vestingSchedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "11592:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                    "typeString": "struct RKVesting.VestingSchedule memory"
                                  }
                                },
                                "id": 1438,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountTotal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "11592:27:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1439,
                                "name": "vestedSeconds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1430,
                                "src": "11622:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11592:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 1441,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "11636:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                  "typeString": "struct RKVesting.VestingSchedule memory"
                                }
                              },
                              "id": 1442,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "duration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 788,
                              "src": "11636:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11592:68:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11569:91:6"
                        },
                        {
                          "expression": {
                            "id": 1450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1445,
                              "name": "vestedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1436,
                              "src": "11674:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1446,
                                "name": "vestedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "11689:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 1447,
                                  "name": "vestingSchedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "11704:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                    "typeString": "struct RKVesting.VestingSchedule memory"
                                  }
                                },
                                "id": 1448,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "released",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 796,
                                "src": "11704:24:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11689:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11674:54:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1451,
                          "nodeType": "ExpressionStatement",
                          "src": "11674:54:6"
                        },
                        {
                          "expression": {
                            "id": 1452,
                            "name": "vestedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "11749:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1378,
                          "id": 1453,
                          "nodeType": "Return",
                          "src": "11742:19:6"
                        }
                      ]
                    },
                    "id": 1455,
                    "nodeType": "IfStatement",
                    "src": "11104:668:6",
                    "trueBody": {
                      "id": 1410,
                      "nodeType": "Block",
                      "src": "11173:86:6",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1404,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "11194:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                  "typeString": "struct RKVesting.VestingSchedule memory"
                                }
                              },
                              "id": 1405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amountTotal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 794,
                              "src": "11194:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 1406,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "11224:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                  "typeString": "struct RKVesting.VestingSchedule memory"
                                }
                              },
                              "id": 1407,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "released",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 796,
                              "src": "11224:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11194:54:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1378,
                          "id": 1409,
                          "nodeType": "Return",
                          "src": "11187:61:6"
                        }
                      ]
                    }
                  },
                  "id": 1456,
                  "nodeType": "IfStatement",
                  "src": "10987:785:6",
                  "trueBody": {
                    "id": 1396,
                    "nodeType": "Block",
                    "src": "11065:33:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11086:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1378,
                        "id": 1395,
                        "nodeType": "Return",
                        "src": "11079:8:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1371,
              "nodeType": "StructuredDocumentation",
              "src": "10676:132:6",
              "text": " @dev Computes the releasable amount of tokens for a vesting schedule.\n @return the amount of releasable tokens"
            },
            "id": 1458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeReleasableAmount",
            "nameLocation": "10822:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1374,
                  "mutability": "mutable",
                  "name": "vestingSchedule",
                  "nameLocation": "10870:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1458,
                  "src": "10847:38:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                    "typeString": "struct RKVesting.VestingSchedule"
                  },
                  "typeName": {
                    "id": 1373,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1372,
                      "name": "VestingSchedule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 799,
                      "src": "10847:15:6"
                    },
                    "referencedDeclaration": 799,
                    "src": "10847:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                      "typeString": "struct RKVesting.VestingSchedule"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10846:40:6"
            },
            "returnParameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1458,
                  "src": "10921:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10921:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10920:9:6"
            },
            "scope": 1468,
            "src": "10813:965:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1466,
              "nodeType": "Block",
              "src": "11880:39:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1463,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "11897:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "11897:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1462,
                  "id": 1465,
                  "nodeType": "Return",
                  "src": "11890:22:6"
                }
              ]
            },
            "id": 1467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "11793:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11807:2:6"
            },
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "11872:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11872:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11871:9:6"
            },
            "scope": 1468,
            "src": "11784:135:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1469,
        "src": "331:11591:6",
        "usedErrors": []
      }
    ],
    "src": "39:11883:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/RKVesting.sol",
    "exportedSymbols": {
      "Address": [
        741
      ],
      "Context": [
        763
      ],
      "IERC20": [
        222
      ],
      "Ownable": [
        104
      ],
      "RKVesting": [
        1468
      ],
      "ReentrancyGuard": [
        144
      ],
      "SafeERC20": [
        446
      ]
    },
    "id": 1469,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 765,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 766,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1469,
        "sourceUnit": 223,
        "src": "64:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 767,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1469,
        "sourceUnit": 447,
        "src": "121:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 768,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1469,
        "sourceUnit": 145,
        "src": "187:62:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 769,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1469,
        "sourceUnit": 105,
        "src": "250:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 771,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "353:7:6"
            },
            "id": 772,
            "nodeType": "InheritanceSpecifier",
            "src": "353:7:6"
          },
          {
            "baseName": {
              "id": 773,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "362:15:6"
            },
            "id": 774,
            "nodeType": "InheritanceSpecifier",
            "src": "362:15:6"
          }
        ],
        "canonicalName": "RKVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 770,
          "nodeType": "StructuredDocumentation",
          "src": "303:27:6",
          "text": " @title RKVesting"
        },
        "fullyImplemented": true,
        "id": 1468,
        "linearizedBaseContracts": [
          1468,
          144,
          104,
          763
        ],
        "name": "RKVesting",
        "nameLocation": "340:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 778,
            "libraryName": {
              "id": 775,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 446,
              "src": "389:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "383:27:6",
            "typeName": {
              "id": 777,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 776,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 222,
                "src": "403:6:6"
              },
              "referencedDeclaration": 222,
              "src": "403:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$222",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "RKVesting.VestingSchedule",
            "id": 799,
            "members": [
              {
                "constant": false,
                "id": 780,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "452:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "447:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 779,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "447:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 782,
                "mutability": "mutable",
                "name": "beneficiary",
                "nameLocation": "539:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "530:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 781,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "530:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 784,
                "mutability": "mutable",
                "name": "cliff",
                "nameLocation": "604:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "595:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 783,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "595:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 786,
                "mutability": "mutable",
                "name": "start",
                "nameLocation": "672:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "663:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 785,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 788,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "749:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "740:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 787,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 790,
                "mutability": "mutable",
                "name": "slicePeriodSeconds",
                "nameLocation": "840:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "832:26:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 789,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "832:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 792,
                "mutability": "mutable",
                "name": "revocable",
                "nameLocation": "925:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "919:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 791,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "919:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 794,
                "mutability": "mutable",
                "name": "amountTotal",
                "nameLocation": "1027:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1019:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 793,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1019:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 796,
                "mutability": "mutable",
                "name": "released",
                "nameLocation": "1094:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1085:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 795,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1085:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 798,
                "mutability": "mutable",
                "name": "revoked",
                "nameLocation": "1172:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1167:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 797,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1167:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VestingSchedule",
            "nameLocation": "422:15:6",
            "nodeType": "StructDefinition",
            "scope": 1468,
            "src": "415:771:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 802,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "1251:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1226:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$222",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 801,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 800,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 222,
                "src": "1226:6:6"
              },
              "referencedDeclaration": 222,
              "src": "1226:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$222",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 805,
            "mutability": "mutable",
            "name": "vestingSchedulesIds",
            "nameLocation": "1282:19:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1264:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 803,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1264:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 804,
              "nodeType": "ArrayTypeName",
              "src": "1264:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 810,
            "mutability": "mutable",
            "name": "vestingSchedules",
            "nameLocation": "1351:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1307:60:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
              "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule)"
            },
            "typeName": {
              "id": 809,
              "keyType": {
                "id": 806,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1315:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1307:35:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule)"
              },
              "valueType": {
                "id": 808,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 807,
                  "name": "VestingSchedule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "1326:15:6"
                },
                "referencedDeclaration": 799,
                "src": "1326:15:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                  "typeString": "struct RKVesting.VestingSchedule"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 812,
            "mutability": "mutable",
            "name": "vestingSchedulesTotalAmount",
            "nameLocation": "1389:27:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1373:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 811,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1373:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 816,
            "mutability": "mutable",
            "name": "holdersVestingCount",
            "nameLocation": "1458:19:6",
            "nodeType": "VariableDeclaration",
            "scope": 1468,
            "src": "1422:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 815,
              "keyType": {
                "id": 813,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1430:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1422:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 814,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1441:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "fb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565",
            "id": 820,
            "name": "Released",
            "nameLocation": "1490:8:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1507:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "1499:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:16:6"
            },
            "src": "1484:31:6"
          },
          {
            "anonymous": false,
            "eventSelector": "44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6",
            "id": 822,
            "name": "Revoked",
            "nameLocation": "1526:7:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1533:2:6"
            },
            "src": "1520:16:6"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "1694:92:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 828,
                              "name": "vestingSchedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "1712:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                                "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                              }
                            },
                            "id": 830,
                            "indexExpression": {
                              "id": 829,
                              "name": "vestingScheduleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "1729:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1712:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                              "typeString": "struct RKVesting.VestingSchedule storage ref"
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "1712:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1763:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1712:55:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1704:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:64:6"
                },
                {
                  "id": 836,
                  "nodeType": "PlaceholderStatement",
                  "src": "1778:1:6"
                }
              ]
            },
            "documentation": {
              "id": 823,
              "nodeType": "StructuredDocumentation",
              "src": "1542:83:6",
              "text": " @dev Reverts if no vesting schedule matches the passed identifier."
            },
            "id": 838,
            "name": "onlyIfVestingScheduleExists",
            "nameLocation": "1639:27:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "1675:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "1667:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1666:27:6"
            },
            "src": "1630:156:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "1954:163:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 844,
                              "name": "vestingSchedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "1972:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                                "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                              }
                            },
                            "id": 846,
                            "indexExpression": {
                              "id": 845,
                              "name": "vestingScheduleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "1989:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1972:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                              "typeString": "struct RKVesting.VestingSchedule storage ref"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "1972:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2023:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1972:55:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1964:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1964:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:64:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 853,
                              "name": "vestingSchedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "2046:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                                "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                              }
                            },
                            "id": 855,
                            "indexExpression": {
                              "id": 854,
                              "name": "vestingScheduleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "2063:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2046:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                              "typeString": "struct RKVesting.VestingSchedule storage ref"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "revoked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 798,
                          "src": "2046:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2093:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2046:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2038:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:61:6"
                },
                {
                  "id": 861,
                  "nodeType": "PlaceholderStatement",
                  "src": "2109:1:6"
                }
              ]
            },
            "documentation": {
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "1792:89:6",
              "text": " @dev Reverts if the vesting schedule does not exist or has been revoked."
            },
            "id": 863,
            "name": "onlyIfVestingScheduleNotRevoked",
            "nameLocation": "1895:31:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "1935:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "1927:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1926:27:6"
            },
            "src": "1886:231:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "2264:81:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 870,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "2282:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2300:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2292:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 871,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2292:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2292:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2282:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2274:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 877,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:31:6"
                },
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 878,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "2315:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$222",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 880,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "2331:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 879,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2324:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2324:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$222",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2315:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$222",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:23:6"
                }
              ]
            },
            "documentation": {
              "id": 864,
              "nodeType": "StructuredDocumentation",
              "src": "2123:108:6",
              "text": " @dev Creates a vesting contract.\n @param token_ address of the ERC20 token contract"
            },
            "id": 885,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "2256:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "2248:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:16:6"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2264:0:6"
            },
            "scope": 1468,
            "src": "2236:109:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "2378:2:6",
              "statements": []
            },
            "id": 889,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2358:2:6"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2378:0:6"
            },
            "scope": 1468,
            "src": "2351:29:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 892,
              "nodeType": "Block",
              "src": "2414:2:6",
              "statements": []
            },
            "id": 893,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2394:2:6"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2414:0:6"
            },
            "scope": 1468,
            "src": "2386:30:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 905,
              "nodeType": "Block",
              "src": "2674:57:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 901,
                      "name": "holdersVestingCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "2691:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 903,
                    "indexExpression": {
                      "id": 902,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "2711:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2691:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 900,
                  "id": 904,
                  "nodeType": "Return",
                  "src": "2684:40:6"
                }
              ]
            },
            "documentation": {
              "id": 894,
              "nodeType": "StructuredDocumentation",
              "src": "2422:136:6",
              "text": " @dev Returns the number of vesting schedules associated to a beneficiary.\n @return the number of vesting schedules"
            },
            "functionSelector": "5a7bb69a",
            "id": 906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingSchedulesCountByBeneficiary",
            "nameLocation": "2572:37:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "2618:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "2610:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2610:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2609:22:6"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "2666:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2665:9:6"
            },
            "scope": 1468,
            "src": "2563:168:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "2930:140:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 915,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 909,
                          "src": "2948:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 916,
                            "name": "getVestingSchedulesCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "2956:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2956:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2948:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e6473",
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2984:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abd18f3555caa4563ffa0f63bfdb073588de08ae6c678a44745ae051c21c5cf4",
                          "typeString": "literal_string \"TokenVesting: index out of bounds\""
                        },
                        "value": "TokenVesting: index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abd18f3555caa4563ffa0f63bfdb073588de08ae6c678a44745ae051c21c5cf4",
                          "typeString": "literal_string \"TokenVesting: index out of bounds\""
                        }
                      ],
                      "id": 914,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2940:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:80:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:80:6"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 922,
                      "name": "vestingSchedulesIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "3037:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "id": 924,
                    "indexExpression": {
                      "id": 923,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "3057:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3037:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 913,
                  "id": 925,
                  "nodeType": "Return",
                  "src": "3030:33:6"
                }
              ]
            },
            "documentation": {
              "id": 907,
              "nodeType": "StructuredDocumentation",
              "src": "2737:102:6",
              "text": " @dev Returns the vesting schedule id at the given index.\n @return the vesting id"
            },
            "functionSelector": "f9079b37",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingIdAtIndex",
            "nameLocation": "2853:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2881:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "2873:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2872:15:6"
            },
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "2922:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2921:9:6"
            },
            "scope": 1468,
            "src": "2844:226:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 945,
              "nodeType": "Block",
              "src": "3366:101:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 940,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "3445:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 941,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "3453:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 939,
                          "name": "computeVestingScheduleIdForAddressAndIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "3402:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (address,uint256) pure returns (bytes32)"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3402:57:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 938,
                      "name": "getVestingSchedule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1297,
                      "src": "3383:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_VestingSchedule_$799_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct RKVesting.VestingSchedule memory)"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3383:77:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                      "typeString": "struct RKVesting.VestingSchedule memory"
                    }
                  },
                  "functionReturnParameters": 937,
                  "id": 944,
                  "nodeType": "Return",
                  "src": "3376:84:6"
                }
              ]
            },
            "documentation": {
              "id": 928,
              "nodeType": "StructuredDocumentation",
              "src": "3076:152:6",
              "text": " @notice Returns the vesting schedule information for a given holder and index.\n @return the vesting schedule structure information"
            },
            "functionSelector": "f51321d7",
            "id": 946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingScheduleByAddressAndIndex",
            "nameLocation": "3242:35:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "3286:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "3278:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3302:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "3294:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3277:31:6"
            },
            "returnParameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "3343:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                    "typeString": "struct RKVesting.VestingSchedule"
                  },
                  "typeName": {
                    "id": 935,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 934,
                      "name": "VestingSchedule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 799,
                      "src": "3343:15:6"
                    },
                    "referencedDeclaration": 799,
                    "src": "3343:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                      "typeString": "struct RKVesting.VestingSchedule"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3342:24:6"
            },
            "scope": 1468,
            "src": "3233:234:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "3686:51:6",
              "statements": [
                {
                  "expression": {
                    "id": 952,
                    "name": "vestingSchedulesTotalAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 812,
                    "src": "3703:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 951,
                  "id": 953,
                  "nodeType": "Return",
                  "src": "3696:34:6"
                }
              ]
            },
            "documentation": {
              "id": 947,
              "nodeType": "StructuredDocumentation",
              "src": "3474:123:6",
              "text": " @notice Returns the total amount of vesting schedules.\n @return the total amount of vesting schedules"
            },
            "functionSelector": "48deb471",
            "id": 955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingSchedulesTotalAmount",
            "nameLocation": "3611:30:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3641:2:6"
            },
            "returnParameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 950,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "3678:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3677:9:6"
            },
            "scope": 1468,
            "src": "3602:135:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "3903:39:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 963,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "3928:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3920:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 961,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3920:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3920:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 960,
                  "id": 965,
                  "nodeType": "Return",
                  "src": "3913:22:6"
                }
              ]
            },
            "documentation": {
              "id": 956,
              "nodeType": "StructuredDocumentation",
              "src": "3743:93:6",
              "text": " @dev Returns the address of the ERC20 token managed by the vesting contract."
            },
            "functionSelector": "21df0da7",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "3850:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3858:2:6"
            },
            "returnParameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "3895:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3894:9:6"
            },
            "scope": 1468,
            "src": "3841:101:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "4843:1103:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 988,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4874:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RKVesting_$1468",
                                "typeString": "contract RKVesting"
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getWithdrawableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1314,
                            "src": "4874:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4874:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 991,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 982,
                          "src": "4906:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4874:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2063616e6e6f74206372656174652076657374696e67207363686564756c652062656361757365206e6f742073756666696369656e7420746f6b656e73",
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4927:76:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2eac501d5068c970a209489eb1d1ae38aa7e39d93aa968139e8303982c5b39d",
                          "typeString": "literal_string \"TokenVesting: cannot create vesting schedule because not sufficient tokens\""
                        },
                        "value": "TokenVesting: cannot create vesting schedule because not sufficient tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2eac501d5068c970a209489eb1d1ae38aa7e39d93aa968139e8303982c5b39d",
                          "typeString": "literal_string \"TokenVesting: cannot create vesting schedule because not sufficient tokens\""
                        }
                      ],
                      "id": 987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4853:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4853:160:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "4853:160:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 997,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "5031:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5043:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5031:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206475726174696f6e206d757374206265203e2030",
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5046:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aef052e3b5fc0eb29cdf76f24ed1e0239550c0a7a9e6afe7257b226df64ceb86",
                          "typeString": "literal_string \"TokenVesting: duration must be > 0\""
                        },
                        "value": "TokenVesting: duration must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aef052e3b5fc0eb29cdf76f24ed1e0239550c0a7a9e6afe7257b226df64ceb86",
                          "typeString": "literal_string \"TokenVesting: duration must be > 0\""
                        }
                      ],
                      "id": 996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5023:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5023:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1002,
                  "nodeType": "ExpressionStatement",
                  "src": "5023:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1004,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 982,
                          "src": "5101:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5111:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5101:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20616d6f756e74206d757374206265203e2030",
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5114:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596",
                          "typeString": "literal_string \"TokenVesting: amount must be > 0\""
                        },
                        "value": "TokenVesting: amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596",
                          "typeString": "literal_string \"TokenVesting: amount must be > 0\""
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5093:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5093:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1009,
                  "nodeType": "ExpressionStatement",
                  "src": "5093:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1011,
                          "name": "_slicePeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5167:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5190:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5167:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20736c696365506572696f645365636f6e6473206d757374206265203e3d2031",
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5193:47:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a09ee7f895363f516ca65be926093c2b80d1ec647ac6f8bc2bc1e112800d5cd",
                          "typeString": "literal_string \"TokenVesting: slicePeriodSeconds must be >= 1\""
                        },
                        "value": "TokenVesting: slicePeriodSeconds must be >= 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a09ee7f895363f516ca65be926093c2b80d1ec647ac6f8bc2bc1e112800d5cd",
                          "typeString": "literal_string \"TokenVesting: slicePeriodSeconds must be >= 1\""
                        }
                      ],
                      "id": 1010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5159:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5159:82:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "5159:82:6"
                },
                {
                  "assignments": [
                    1018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1018,
                      "mutability": "mutable",
                      "name": "vestingScheduleId",
                      "nameLocation": "5259:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "5251:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1017,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5251:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1023,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1021,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "5322:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1019,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "5279:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RKVesting_$1468",
                          "typeString": "contract RKVesting"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "computeNextVestingScheduleIdForHolder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "5279:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (address) view external returns (bytes32)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5251:84:6"
                },
                {
                  "assignments": [
                    1025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1025,
                      "mutability": "mutable",
                      "name": "cliff",
                      "nameLocation": "5353:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "5345:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1024,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5345:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1029,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1026,
                      "name": "_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "5361:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1027,
                      "name": "_cliff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "5370:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5361:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5345:31:6"
                },
                {
                  "expression": {
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1030,
                        "name": "vestingSchedules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "5386:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                          "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                        }
                      },
                      "id": 1032,
                      "indexExpression": {
                        "id": 1031,
                        "name": "vestingScheduleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "5403:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5386:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                        "typeString": "struct RKVesting.VestingSchedule storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5453:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 1035,
                          "name": "_beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "5471:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1036,
                          "name": "cliff",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "5497:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1037,
                          "name": "_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "5516:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1038,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "5536:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1039,
                          "name": "_slicePeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5559:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1040,
                          "name": "_revocable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "5592:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 1041,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 982,
                          "src": "5616:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5637:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5652:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1033,
                        "name": "VestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 799,
                        "src": "5424:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_VestingSchedule_$799_storage_ptr_$",
                          "typeString": "type(struct RKVesting.VestingSchedule storage pointer)"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5424:243:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                        "typeString": "struct RKVesting.VestingSchedule memory"
                      }
                    },
                    "src": "5386:281:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "5386:281:6"
                },
                {
                  "expression": {
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1047,
                      "name": "vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "5677:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1048,
                        "name": "vestingSchedulesTotalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "5707:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1049,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "5737:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5707:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5677:67:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "5677:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1056,
                        "name": "vestingScheduleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "5779:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1053,
                        "name": "vestingSchedulesIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "5754:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5754:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5754:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "5754:43:6"
                },
                {
                  "assignments": [
                    1060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1060,
                      "mutability": "mutable",
                      "name": "currentVestingCount",
                      "nameLocation": "5815:19:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "5807:27:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1059,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5807:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1064,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1061,
                      "name": "holdersVestingCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "5837:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1063,
                    "indexExpression": {
                      "id": 1062,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "5857:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5837:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5807:63:6"
                },
                {
                  "expression": {
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1065,
                        "name": "holdersVestingCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "5880:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1067,
                      "indexExpression": {
                        "id": 1066,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "5900:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5880:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1068,
                        "name": "currentVestingCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "5916:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5938:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5916:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5880:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "5880:59:6"
                }
              ]
            },
            "documentation": {
              "id": 968,
              "nodeType": "StructuredDocumentation",
              "src": "3948:629:6",
              "text": " @notice Creates a new vesting schedule for a beneficiary.\n @param _beneficiary address of the beneficiary to whom vested tokens are transferred\n @param _start start time of the vesting period\n @param _cliff duration in seconds of the cliff in which tokens will begin to vest\n @param _duration duration in seconds of the period in which the tokens will vest\n @param _slicePeriodSeconds duration of a slice period for the vesting in seconds\n @param _revocable whether the vesting is revocable or not\n @param _amount total amount of tokens to be released at the end of the vesting"
            },
            "functionSelector": "17e289e9",
            "id": 1074,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 984,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "4834:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4834:9:6"
              }
            ],
            "name": "createVestingSchedule",
            "nameLocation": "4591:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "4630:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4622:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4622:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "_start",
                  "nameLocation": "4660:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4652:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4652:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "_cliff",
                  "nameLocation": "4684:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4676:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "4708:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4700:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "_slicePeriodSeconds",
                  "nameLocation": "4735:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4727:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4727:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "_revocable",
                  "nameLocation": "4769:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4764:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4764:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4797:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "4789:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4789:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4612:198:6"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4843:0:6"
            },
            "scope": 1468,
            "src": "4582:1364:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "6229:561:6",
              "statements": [
                {
                  "assignments": [
                    1087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1087,
                      "mutability": "mutable",
                      "name": "vestingSchedule",
                      "nameLocation": "6263:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "6239:39:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                        "typeString": "struct RKVesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 1086,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1085,
                          "name": "VestingSchedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "6239:15:6"
                        },
                        "referencedDeclaration": 799,
                        "src": "6239:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1091,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1088,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "6281:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1090,
                    "indexExpression": {
                      "id": 1089,
                      "name": "vestingScheduleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "6298:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6281:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6239:77:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1093,
                            "name": "vestingSchedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1087,
                            "src": "6334:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                              "typeString": "struct RKVesting.VestingSchedule storage pointer"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "revocable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 792,
                          "src": "6334:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6363:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6334:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2076657374696e67206973206e6f74207265766f6361626c65",
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6369:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582d8774ffe94a897813710ca5f4ba3e235ee83fc30565f07b97cb0c05bc94f7",
                          "typeString": "literal_string \"TokenVesting: vesting is not revocable\""
                        },
                        "value": "TokenVesting: vesting is not revocable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_582d8774ffe94a897813710ca5f4ba3e235ee83fc30565f07b97cb0c05bc94f7",
                          "typeString": "literal_string \"TokenVesting: vesting is not revocable\""
                        }
                      ],
                      "id": 1092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6326:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6326:84:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "6326:84:6"
                },
                {
                  "assignments": [
                    1101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1101,
                      "mutability": "mutable",
                      "name": "vestedAmount",
                      "nameLocation": "6428:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "6420:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1100,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6420:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1105,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1103,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "6468:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      ],
                      "id": 1102,
                      "name": "_computeReleasableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "6443:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$799_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct RKVesting.VestingSchedule memory) view returns (uint256)"
                      }
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6443:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6420:64:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1106,
                      "name": "vestedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1101,
                      "src": "6497:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6512:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6497:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1115,
                  "nodeType": "IfStatement",
                  "src": "6494:85:6",
                  "trueBody": {
                    "id": 1114,
                    "nodeType": "Block",
                    "src": "6514:65:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1110,
                              "name": "vestingScheduleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "6536:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1111,
                              "name": "vestedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1101,
                              "src": "6555:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1109,
                            "name": "release",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "6528:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6528:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1113,
                        "nodeType": "ExpressionStatement",
                        "src": "6528:40:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1117,
                      "mutability": "mutable",
                      "name": "unreleased",
                      "nameLocation": "6596:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "6588:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1116,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6588:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1123,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1118,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "6609:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountTotal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 794,
                      "src": "6609:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 1120,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "6639:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "released",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 796,
                      "src": "6639:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6609:54:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6588:75:6"
                },
                {
                  "expression": {
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1124,
                      "name": "vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "6673:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1125,
                        "name": "vestingSchedulesTotalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "6703:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1126,
                        "name": "unreleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "6733:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6703:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6673:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "6673:70:6"
                },
                {
                  "expression": {
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1130,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "6753:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "revoked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 798,
                      "src": "6753:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6779:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6753:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "6753:30:6"
                }
              ]
            },
            "documentation": {
              "id": 1075,
              "nodeType": "StructuredDocumentation",
              "src": "5952:138:6",
              "text": " @notice Revokes the vesting schedule for given identifier.\n @param vestingScheduleId the vesting schedule identifier"
            },
            "functionSelector": "b75c7dc6",
            "id": 1137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1079,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6161:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6161:9:6"
              },
              {
                "arguments": [
                  {
                    "id": 1082,
                    "name": "vestingScheduleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1077,
                    "src": "6211:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1083,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1081,
                  "name": "onlyIfVestingScheduleNotRevoked",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 863,
                  "src": "6179:31:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6179:50:6"
              }
            ],
            "name": "revoke",
            "nameLocation": "6104:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "6119:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "6111:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6111:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6110:27:6"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6229:0:6"
            },
            "scope": 1468,
            "src": "6095:695:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1162,
              "nodeType": "Block",
              "src": "6977:157:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1146,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "6995:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RKVesting_$1468",
                                "typeString": "contract RKVesting"
                              }
                            },
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getWithdrawableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1314,
                            "src": "6995:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6995:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1149,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "7027:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6995:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206e6f7420656e6f75676820776974686472617761626c652066756e6473",
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7035:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3208b577e75abf50e25ea56b6fb6f95b34754fbb6b3a3f83a4c87e183c8b693",
                          "typeString": "literal_string \"TokenVesting: not enough withdrawable funds\""
                        },
                        "value": "TokenVesting: not enough withdrawable funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3208b577e75abf50e25ea56b6fb6f95b34754fbb6b3a3f83a4c87e183c8b693",
                          "typeString": "literal_string \"TokenVesting: not enough withdrawable funds\""
                        }
                      ],
                      "id": 1145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6987:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6987:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "6987:94:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1157,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "7111:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7111:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1159,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "7120:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1154,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "7091:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "7091:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7091:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "7091:36:6"
                }
              ]
            },
            "documentation": {
              "id": 1138,
              "nodeType": "StructuredDocumentation",
              "src": "6796:110:6",
              "text": " @notice Withdraw the specified amount if possible.\n @param amount the amount to withdraw"
            },
            "functionSelector": "2e1a7d4d",
            "id": 1163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1143,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1142,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6968:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6968:9:6"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6920:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6937:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "6929:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6929:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6928:16:6"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6977:0:6"
            },
            "scope": 1468,
            "src": "6911:223:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1249,
              "nodeType": "Block",
              "src": "7483:825:6",
              "statements": [
                {
                  "assignments": [
                    1178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1178,
                      "mutability": "mutable",
                      "name": "vestingSchedule",
                      "nameLocation": "7517:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "7493:39:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                        "typeString": "struct RKVesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 1177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1176,
                          "name": "VestingSchedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "7493:15:6"
                        },
                        "referencedDeclaration": 799,
                        "src": "7493:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1182,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1179,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "7535:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1181,
                    "indexExpression": {
                      "id": 1180,
                      "name": "vestingScheduleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1166,
                      "src": "7552:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7535:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7493:77:6"
                },
                {
                  "assignments": [
                    1184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "isBeneficiary",
                      "nameLocation": "7585:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "7580:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7580:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1190,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1185,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7601:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7601:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1187,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "7615:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 782,
                      "src": "7615:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7601:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7580:62:6"
                },
                {
                  "assignments": [
                    1192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1192,
                      "mutability": "mutable",
                      "name": "isOwner",
                      "nameLocation": "7657:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "7652:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1191,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7652:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1198,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1193,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7667:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7667:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1195,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "7681:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7681:7:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7667:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7652:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1200,
                          "name": "isBeneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "7719:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 1201,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1192,
                          "src": "7736:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7719:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206f6e6c792062656e656669636961727920616e64206f776e65722063616e2072656c656173652076657374656420746f6b656e73",
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:68:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd611d281859d9ca31d28e68329b9c1d51f5452ce3844d60d556eda1e2459a76",
                          "typeString": "literal_string \"TokenVesting: only beneficiary and owner can release vested tokens\""
                        },
                        "value": "TokenVesting: only beneficiary and owner can release vested tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd611d281859d9ca31d28e68329b9c1d51f5452ce3844d60d556eda1e2459a76",
                          "typeString": "literal_string \"TokenVesting: only beneficiary and owner can release vested tokens\""
                        }
                      ],
                      "id": 1199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7698:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7698:137:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "7698:137:6"
                },
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "vestedAmount",
                      "nameLocation": "7853:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "7845:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7845:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1209,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "7893:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      ],
                      "id": 1208,
                      "name": "_computeReleasableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "7868:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$799_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct RKVesting.VestingSchedule memory) view returns (uint256)"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7868:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7845:64:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1213,
                          "name": "vestedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1207,
                          "src": "7927:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1214,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "7943:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7927:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b656e732c206e6f7420656e6f7567682076657374656420746f6b656e73",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7951:63:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51be555965f95e85e66dc8a38c407d35ee8ab28ac3bdb4e2ae0f84a440da9617",
                          "typeString": "literal_string \"TokenVesting: cannot release tokens, not enough vested tokens\""
                        },
                        "value": "TokenVesting: cannot release tokens, not enough vested tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51be555965f95e85e66dc8a38c407d35ee8ab28ac3bdb4e2ae0f84a440da9617",
                          "typeString": "literal_string \"TokenVesting: cannot release tokens, not enough vested tokens\""
                        }
                      ],
                      "id": 1212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7919:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7919:96:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "7919:96:6"
                },
                {
                  "expression": {
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1219,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "8025:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "released",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 796,
                      "src": "8025:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1222,
                          "name": "vestingSchedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1178,
                          "src": "8052:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                            "typeString": "struct RKVesting.VestingSchedule storage pointer"
                          }
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "released",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 796,
                        "src": "8052:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1224,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "8079:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8052:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8025:60:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "8025:60:6"
                },
                {
                  "assignments": [
                    1229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1229,
                      "mutability": "mutable",
                      "name": "beneficiaryPayable",
                      "nameLocation": "8111:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "8095:34:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8095:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1235,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1232,
                          "name": "vestingSchedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1178,
                          "src": "8140:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                            "typeString": "struct RKVesting.VestingSchedule storage pointer"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "beneficiary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "8140:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8132:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8132:8:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8132:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8095:73:6"
                },
                {
                  "expression": {
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1236,
                      "name": "vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "8178:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1237,
                        "name": "vestingSchedulesTotalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "8208:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1238,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "8238:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8208:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8178:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "8178:66:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1245,
                        "name": "beneficiaryPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "8274:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1246,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "8294:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1242,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "8254:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "8254:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8254:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "8254:47:6"
                }
              ]
            },
            "documentation": {
              "id": 1164,
              "nodeType": "StructuredDocumentation",
              "src": "7140:162:6",
              "text": " @notice Release vested amount of tokens.\n @param vestingScheduleId the vesting schedule identifier\n @param amount the amount to release"
            },
            "functionSelector": "66afd8ef",
            "id": 1250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1170,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "7412:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7412:12:6"
              },
              {
                "arguments": [
                  {
                    "id": 1173,
                    "name": "vestingScheduleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1166,
                    "src": "7465:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1172,
                  "name": "onlyIfVestingScheduleNotRevoked",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 863,
                  "src": "7433:31:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7433:50:6"
              }
            ],
            "name": "release",
            "nameLocation": "7316:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "7341:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "7333:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7333:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7376:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "7368:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7368:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7323:65:6"
            },
            "returnParameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7483:0:6"
            },
            "scope": 1468,
            "src": "7307:1001:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1259,
              "nodeType": "Block",
              "src": "8540:50:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1256,
                      "name": "vestingSchedulesIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "8557:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8557:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1255,
                  "id": 1258,
                  "nodeType": "Return",
                  "src": "8550:33:6"
                }
              ]
            },
            "documentation": {
              "id": 1251,
              "nodeType": "StructuredDocumentation",
              "src": "8314:133:6",
              "text": " @dev Returns the number of vesting schedules managed by this contract.\n @return the number of vesting schedules"
            },
            "functionSelector": "13083617",
            "id": 1260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingSchedulesCount",
            "nameLocation": "8461:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8485:2:6"
            },
            "returnParameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1260,
                  "src": "8532:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8532:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8531:9:6"
            },
            "scope": 1468,
            "src": "8452:138:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "8908:152:6",
              "statements": [
                {
                  "assignments": [
                    1273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1273,
                      "mutability": "mutable",
                      "name": "vestingSchedule",
                      "nameLocation": "8942:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "8918:39:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                        "typeString": "struct RKVesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 1272,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1271,
                          "name": "VestingSchedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "8918:15:6"
                        },
                        "referencedDeclaration": 799,
                        "src": "8918:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1277,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1274,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "8960:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1276,
                    "indexExpression": {
                      "id": 1275,
                      "name": "vestingScheduleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "8977:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8960:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8918:77:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1279,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "9037:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                          "typeString": "struct RKVesting.VestingSchedule storage pointer"
                        }
                      ],
                      "id": 1278,
                      "name": "_computeReleasableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "9012:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$799_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct RKVesting.VestingSchedule memory) view returns (uint256)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9012:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1270,
                  "id": 1281,
                  "nodeType": "Return",
                  "src": "9005:48:6"
                }
              ]
            },
            "documentation": {
              "id": 1261,
              "nodeType": "StructuredDocumentation",
              "src": "8596:136:6",
              "text": " @notice Computes the vested amount of tokens for the given vesting schedule identifier.\n @return the vested amount"
            },
            "functionSelector": "ea1bb3d5",
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1266,
                    "name": "vestingScheduleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1263,
                    "src": "8852:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1267,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1265,
                  "name": "onlyIfVestingScheduleNotRevoked",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 863,
                  "src": "8820:31:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8820:50:6"
              }
            ],
            "name": "computeReleasableAmount",
            "nameLocation": "8746:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "8778:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "8770:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8770:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8769:27:6"
            },
            "returnParameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "8900:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8900:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8899:9:6"
            },
            "scope": 1468,
            "src": "8737:323:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1296,
              "nodeType": "Block",
              "src": "9339:59:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1292,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "9356:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1294,
                    "indexExpression": {
                      "id": 1293,
                      "name": "vestingScheduleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "9373:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9356:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "functionReturnParameters": 1291,
                  "id": 1295,
                  "nodeType": "Return",
                  "src": "9349:42:6"
                }
              ]
            },
            "documentation": {
              "id": 1284,
              "nodeType": "StructuredDocumentation",
              "src": "9066:146:6",
              "text": " @notice Returns the vesting schedule information for a given identifier.\n @return the vesting schedule structure information"
            },
            "functionSelector": "9ef346b4",
            "id": 1297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingSchedule",
            "nameLocation": "9226:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "vestingScheduleId",
                  "nameLocation": "9253:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "9245:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9245:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9244:27:6"
            },
            "returnParameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "9316:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                    "typeString": "struct RKVesting.VestingSchedule"
                  },
                  "typeName": {
                    "id": 1289,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1288,
                      "name": "VestingSchedule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 799,
                      "src": "9316:15:6"
                    },
                    "referencedDeclaration": 799,
                    "src": "9316:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                      "typeString": "struct RKVesting.VestingSchedule"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9315:24:6"
            },
            "scope": 1468,
            "src": "9217:181:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1313,
              "nodeType": "Block",
              "src": "9615:85:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1307,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "9657:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RKVesting_$1468",
                                "typeString": "contract RKVesting"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RKVesting_$1468",
                                "typeString": "contract RKVesting"
                              }
                            ],
                            "id": 1306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9649:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1305,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9649:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9649:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1303,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "9632:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$222",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 179,
                        "src": "9632:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9632:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1310,
                      "name": "vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "9666:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9632:61:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1302,
                  "id": 1312,
                  "nodeType": "Return",
                  "src": "9625:68:6"
                }
              ]
            },
            "documentation": {
              "id": 1298,
              "nodeType": "StructuredDocumentation",
              "src": "9404:121:6",
              "text": " @dev Returns the amount of tokens that can be withdrawn by the owner.\n @return the amount of tokens"
            },
            "functionSelector": "90be10cc",
            "id": 1314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawableAmount",
            "nameLocation": "9539:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9560:2:6"
            },
            "returnParameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "9607:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9607:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9606:9:6"
            },
            "scope": 1468,
            "src": "9530:170:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1329,
              "nodeType": "Block",
              "src": "9921:103:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1323,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "9981:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1324,
                          "name": "holdersVestingCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 816,
                          "src": "9989:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1326,
                        "indexExpression": {
                          "id": 1325,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1317,
                          "src": "10009:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9989:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1322,
                      "name": "computeVestingScheduleIdForAddressAndIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "9938:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9938:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1321,
                  "id": 1328,
                  "nodeType": "Return",
                  "src": "9931:86:6"
                }
              ]
            },
            "documentation": {
              "id": 1315,
              "nodeType": "StructuredDocumentation",
              "src": "9706:95:6",
              "text": " @dev Computes the next vesting schedule identifier for a given holder address."
            },
            "functionSelector": "f7c469f0",
            "id": 1330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeNextVestingScheduleIdForHolder",
            "nameLocation": "9815:37:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "9861:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "9853:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9853:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9852:16:6"
            },
            "returnParameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "9913:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9913:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9912:9:6"
            },
            "scope": 1468,
            "src": "9806:218:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1350,
              "nodeType": "Block",
              "src": "10242:125:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1339,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "10259:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VestingSchedule_$799_storage_$",
                        "typeString": "mapping(bytes32 => struct RKVesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1348,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1341,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1333,
                          "src": "10319:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1342,
                              "name": "holdersVestingCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 816,
                              "src": "10327:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1344,
                            "indexExpression": {
                              "id": 1343,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1333,
                              "src": "10347:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10327:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10357:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "10327:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1340,
                        "name": "computeVestingScheduleIdForAddressAndIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "10276:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (address,uint256) pure returns (bytes32)"
                        }
                      },
                      "id": 1347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10276:83:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10259:101:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage",
                      "typeString": "struct RKVesting.VestingSchedule storage ref"
                    }
                  },
                  "functionReturnParameters": 1338,
                  "id": 1349,
                  "nodeType": "Return",
                  "src": "10252:108:6"
                }
              ]
            },
            "documentation": {
              "id": 1331,
              "nodeType": "StructuredDocumentation",
              "src": "10030:83:6",
              "text": " @dev Returns the last vesting schedule for a given holder address."
            },
            "functionSelector": "7e913dc6",
            "id": 1351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastVestingScheduleForHolder",
            "nameLocation": "10127:31:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "10167:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1351,
                  "src": "10159:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10159:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10158:16:6"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1351,
                  "src": "10219:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                    "typeString": "struct RKVesting.VestingSchedule"
                  },
                  "typeName": {
                    "id": 1336,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1335,
                      "name": "VestingSchedule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 799,
                      "src": "10219:15:6"
                    },
                    "referencedDeclaration": 799,
                    "src": "10219:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                      "typeString": "struct RKVesting.VestingSchedule"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10218:24:6"
            },
            "scope": 1468,
            "src": "10118:249:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1369,
              "nodeType": "Block",
              "src": "10604:66:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1364,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "10648:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1365,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "10656:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1362,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "10631:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10631:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10631:31:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1361,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "10621:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10621:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1360,
                  "id": 1368,
                  "nodeType": "Return",
                  "src": "10614:49:6"
                }
              ]
            },
            "documentation": {
              "id": 1352,
              "nodeType": "StructuredDocumentation",
              "src": "10373:91:6",
              "text": " @dev Computes the vesting schedule identifier for an address and an index."
            },
            "functionSelector": "8af104da",
            "id": 1370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeVestingScheduleIdForAddressAndIndex",
            "nameLocation": "10478:42:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1354,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "10529:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "10521:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10521:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1356,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "10545:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "10537:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10537:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10520:31:6"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "10596:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10596:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10595:9:6"
            },
            "scope": 1468,
            "src": "10469:201:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1457,
              "nodeType": "Block",
              "src": "10929:849:6",
              "statements": [
                {
                  "assignments": [
                    1380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1380,
                      "mutability": "mutable",
                      "name": "currentTime",
                      "nameLocation": "10947:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1457,
                      "src": "10939:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10939:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1383,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1381,
                      "name": "getCurrentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10961:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10961:16:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10939:38:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1384,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "10992:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1385,
                              "name": "vestingSchedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "11006:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                "typeString": "struct RKVesting.VestingSchedule memory"
                              }
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cliff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "11006:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10992:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1388,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10991:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1389,
                          "name": "vestingSchedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "11032:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                            "typeString": "struct RKVesting.VestingSchedule memory"
                          }
                        },
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "revoked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 798,
                        "src": "11032:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11059:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "11032:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10991:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1397,
                        "name": "currentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1380,
                        "src": "11108:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1398,
                            "name": "vestingSchedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "11123:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                              "typeString": "struct RKVesting.VestingSchedule memory"
                            }
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 786,
                          "src": "11123:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1400,
                            "name": "vestingSchedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "11147:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                              "typeString": "struct RKVesting.VestingSchedule memory"
                            }
                          },
                          "id": 1401,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 788,
                          "src": "11147:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11123:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11108:63:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1454,
                      "nodeType": "Block",
                      "src": "11265:507:6",
                      "statements": [
                        {
                          "assignments": [
                            1412
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1412,
                              "mutability": "mutable",
                              "name": "timeFromStart",
                              "nameLocation": "11287:13:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11279:21:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1411,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11279:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1417,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1413,
                              "name": "currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1380,
                              "src": "11303:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 1414,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "11317:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                  "typeString": "struct RKVesting.VestingSchedule memory"
                                }
                              },
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "start",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 786,
                              "src": "11317:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11303:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11279:59:6"
                        },
                        {
                          "assignments": [
                            1419
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1419,
                              "mutability": "mutable",
                              "name": "secondsPerSlice",
                              "nameLocation": "11357:15:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11352:20:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1418,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "11352:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1422,
                          "initialValue": {
                            "expression": {
                              "id": 1420,
                              "name": "vestingSchedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "11375:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                "typeString": "struct RKVesting.VestingSchedule memory"
                              }
                            },
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "slicePeriodSeconds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 790,
                            "src": "11375:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11352:57:6"
                        },
                        {
                          "assignments": [
                            1424
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1424,
                              "mutability": "mutable",
                              "name": "vestedSlicePeriods",
                              "nameLocation": "11431:18:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11423:26:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1423,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11423:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1428,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1425,
                              "name": "timeFromStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "11452:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1426,
                              "name": "secondsPerSlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1419,
                              "src": "11466:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11452:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11423:58:6"
                        },
                        {
                          "assignments": [
                            1430
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1430,
                              "mutability": "mutable",
                              "name": "vestedSeconds",
                              "nameLocation": "11503:13:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11495:21:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1429,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11495:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1434,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1431,
                              "name": "vestedSlicePeriods",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1424,
                              "src": "11519:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1432,
                              "name": "secondsPerSlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1419,
                              "src": "11540:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11519:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11495:60:6"
                        },
                        {
                          "assignments": [
                            1436
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1436,
                              "mutability": "mutable",
                              "name": "vestedAmount",
                              "nameLocation": "11577:12:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1454,
                              "src": "11569:20:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1435,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11569:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1444,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1437,
                                  "name": "vestingSchedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "11592:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                    "typeString": "struct RKVesting.VestingSchedule memory"
                                  }
                                },
                                "id": 1438,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountTotal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "11592:27:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1439,
                                "name": "vestedSeconds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1430,
                                "src": "11622:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11592:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 1441,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "11636:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                  "typeString": "struct RKVesting.VestingSchedule memory"
                                }
                              },
                              "id": 1442,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "duration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 788,
                              "src": "11636:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11592:68:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11569:91:6"
                        },
                        {
                          "expression": {
                            "id": 1450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1445,
                              "name": "vestedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1436,
                              "src": "11674:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1446,
                                "name": "vestedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "11689:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 1447,
                                  "name": "vestingSchedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "11704:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                    "typeString": "struct RKVesting.VestingSchedule memory"
                                  }
                                },
                                "id": 1448,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "released",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 796,
                                "src": "11704:24:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11689:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11674:54:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1451,
                          "nodeType": "ExpressionStatement",
                          "src": "11674:54:6"
                        },
                        {
                          "expression": {
                            "id": 1452,
                            "name": "vestedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "11749:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1378,
                          "id": 1453,
                          "nodeType": "Return",
                          "src": "11742:19:6"
                        }
                      ]
                    },
                    "id": 1455,
                    "nodeType": "IfStatement",
                    "src": "11104:668:6",
                    "trueBody": {
                      "id": 1410,
                      "nodeType": "Block",
                      "src": "11173:86:6",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1404,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "11194:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                  "typeString": "struct RKVesting.VestingSchedule memory"
                                }
                              },
                              "id": 1405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amountTotal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 794,
                              "src": "11194:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 1406,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "11224:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                                  "typeString": "struct RKVesting.VestingSchedule memory"
                                }
                              },
                              "id": 1407,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "released",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 796,
                              "src": "11224:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11194:54:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1378,
                          "id": 1409,
                          "nodeType": "Return",
                          "src": "11187:61:6"
                        }
                      ]
                    }
                  },
                  "id": 1456,
                  "nodeType": "IfStatement",
                  "src": "10987:785:6",
                  "trueBody": {
                    "id": 1396,
                    "nodeType": "Block",
                    "src": "11065:33:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11086:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1378,
                        "id": 1395,
                        "nodeType": "Return",
                        "src": "11079:8:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1371,
              "nodeType": "StructuredDocumentation",
              "src": "10676:132:6",
              "text": " @dev Computes the releasable amount of tokens for a vesting schedule.\n @return the amount of releasable tokens"
            },
            "id": 1458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeReleasableAmount",
            "nameLocation": "10822:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1374,
                  "mutability": "mutable",
                  "name": "vestingSchedule",
                  "nameLocation": "10870:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1458,
                  "src": "10847:38:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VestingSchedule_$799_memory_ptr",
                    "typeString": "struct RKVesting.VestingSchedule"
                  },
                  "typeName": {
                    "id": 1373,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1372,
                      "name": "VestingSchedule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 799,
                      "src": "10847:15:6"
                    },
                    "referencedDeclaration": 799,
                    "src": "10847:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$799_storage_ptr",
                      "typeString": "struct RKVesting.VestingSchedule"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10846:40:6"
            },
            "returnParameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1458,
                  "src": "10921:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10921:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10920:9:6"
            },
            "scope": 1468,
            "src": "10813:965:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1466,
              "nodeType": "Block",
              "src": "11880:39:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1463,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "11897:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "11897:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1462,
                  "id": 1465,
                  "nodeType": "Return",
                  "src": "11890:22:6"
                }
              ]
            },
            "id": 1467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "11793:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11807:2:6"
            },
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "11872:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11872:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11871:9:6"
            },
            "scope": 1468,
            "src": "11784:135:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1469,
        "src": "331:11591:6",
        "usedErrors": []
      }
    ],
    "src": "39:11883:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-06-11T13:54:55.961Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "computeNextVestingScheduleIdForHolder(address)": {
        "details": "Computes the next vesting schedule identifier for a given holder address."
      },
      "computeReleasableAmount(bytes32)": {
        "returns": {
          "_0": "the vested amount"
        }
      },
      "computeVestingScheduleIdForAddressAndIndex(address,uint256)": {
        "details": "Computes the vesting schedule identifier for an address and an index."
      },
      "constructor": {
        "details": "Creates a vesting contract.",
        "params": {
          "token_": "address of the ERC20 token contract"
        }
      },
      "createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)": {
        "params": {
          "_amount": "total amount of tokens to be released at the end of the vesting",
          "_beneficiary": "address of the beneficiary to whom vested tokens are transferred",
          "_cliff": "duration in seconds of the cliff in which tokens will begin to vest",
          "_duration": "duration in seconds of the period in which the tokens will vest",
          "_revocable": "whether the vesting is revocable or not",
          "_slicePeriodSeconds": "duration of a slice period for the vesting in seconds",
          "_start": "start time of the vesting period"
        }
      },
      "getLastVestingScheduleForHolder(address)": {
        "details": "Returns the last vesting schedule for a given holder address."
      },
      "getToken()": {
        "details": "Returns the address of the ERC20 token managed by the vesting contract."
      },
      "getVestingIdAtIndex(uint256)": {
        "details": "Returns the vesting schedule id at the given index.",
        "returns": {
          "_0": "the vesting id"
        }
      },
      "getVestingSchedule(bytes32)": {
        "returns": {
          "_0": "the vesting schedule structure information"
        }
      },
      "getVestingScheduleByAddressAndIndex(address,uint256)": {
        "returns": {
          "_0": "the vesting schedule structure information"
        }
      },
      "getVestingSchedulesCount()": {
        "details": "Returns the number of vesting schedules managed by this contract.",
        "returns": {
          "_0": "the number of vesting schedules"
        }
      },
      "getVestingSchedulesCountByBeneficiary(address)": {
        "details": "Returns the number of vesting schedules associated to a beneficiary.",
        "returns": {
          "_0": "the number of vesting schedules"
        }
      },
      "getVestingSchedulesTotalAmount()": {
        "returns": {
          "_0": "the total amount of vesting schedules"
        }
      },
      "getWithdrawableAmount()": {
        "details": "Returns the amount of tokens that can be withdrawn by the owner.",
        "returns": {
          "_0": "the amount of tokens"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "release(bytes32,uint256)": {
        "params": {
          "amount": "the amount to release",
          "vestingScheduleId": "the vesting schedule identifier"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revoke(bytes32)": {
        "params": {
          "vestingScheduleId": "the vesting schedule identifier"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "params": {
          "amount": "the amount to withdraw"
        }
      }
    },
    "title": "RKVesting",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "computeReleasableAmount(bytes32)": {
        "notice": "Computes the vested amount of tokens for the given vesting schedule identifier."
      },
      "createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)": {
        "notice": "Creates a new vesting schedule for a beneficiary."
      },
      "getVestingSchedule(bytes32)": {
        "notice": "Returns the vesting schedule information for a given identifier."
      },
      "getVestingScheduleByAddressAndIndex(address,uint256)": {
        "notice": "Returns the vesting schedule information for a given holder and index."
      },
      "getVestingSchedulesTotalAmount()": {
        "notice": "Returns the total amount of vesting schedules."
      },
      "release(bytes32,uint256)": {
        "notice": "Release vested amount of tokens."
      },
      "revoke(bytes32)": {
        "notice": "Revokes the vesting schedule for given identifier."
      },
      "withdraw(uint256)": {
        "notice": "Withdraw the specified amount if possible."
      }
    },
    "version": 1
  }
}